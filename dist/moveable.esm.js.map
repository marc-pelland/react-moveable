{"version":3,"file":"moveable.esm.js","sources":["../src/react-moveable/consts.ts","../src/react-moveable/utils.ts","../src/react-moveable/ables/triggerRender.ts","../src/react-moveable/getAbleDragger.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/CustomDragger.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/DraggerUtils.ts","../src/react-moveable/ables/utils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/renderDirection.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/consts.ts","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/Moveable.tsx"],"sourcesContent":["import { prefixCSS } from \"framework-utils\";\nimport getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    const defaultCursor\n        = degree45 === 135\n        ? \"nwse-resize\"\n        : degree45 === 45\n        ? \"nesw-resize\"\n        : degree45 === 90\n        ? \"ew-resize\"\n        : \"ns-resize\"; // 135\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};cursor: -webkit-image-set(url('${x1}') 1x, url('${x2}') 2x) 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT\n    = agent.os.name.indexOf(\"ios\") > -1 || agent.browser.name.indexOf(\"safari\") > -1;\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = prefixCSS(PREFIX, `\n{\n\tposition: fixed;\n\twidth: 0;\n\theight: 0;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --zoom: 1;\n    --zoompx: 1px;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\tposition: absolute;\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n\tbackground: #4af;\n\tmargin-top: -7px;\n    margin-left: -7px;\n    width: calc(14 * var(--zoompx));\n    height: calc(14 * var(--zoompx));\n    margin-top: calc(-7 * var(--zoompx));\n    margin-left: calc(-7 * var(--zoompx));\n    border: calc(2 * var(--zoompx)) solid #fff;\n    z-index: 10;\n}\n.line {\n\tposition: absolute;\n\twidth: 1px;\n    height: 1px;\n    width: var(--zoompx);\n    height: var(--zoompx);\n\tbackground: #4af;\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top: var(--zoompx) dashed #4af;\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left: var(--zoompx) dashed #4af;\n}\n.line.dashed:before {\n    position: absolute;\n    content: attr(data-size);\n    color: #4af;\n    font-size: 12px;\n    font-weight: bold;\n}\n.line.dashed.horizontal:before, .line.gap.horizontal:before {\n    left: 50%;\n    transform: translateX(-50%);\n    bottom: 5px;\n}\n.line.dashed.vertical:before, .line.gap.vertical:before {\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.line.rotation-line {\n\theight: 40px;\n    width: 1px;\n    transform-origin: 50% calc(100% - 0.5px);\n    top: -40px;\n    width: var(--zoompx);\n    height: calc(40 * var(--zoompx));\n    top: calc(-40 * var(--zoompx));\n    transform-origin: 50% calc(100% - 0.5 * var(--zoompx));\n}\n.line.rotation-line .control {\n\tborder-color: #4af;\n\tbackground:#fff;\n    cursor: alias;\n    left: 50%;\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n    width: calc(2 * var(--zoompx));\n}\n.line.horizontal.bold {\n    height: 2px;\n    height: calc(2 * var(--zoompx));\n}\n\n.line.gap {\n    background: #f55;\n}\n.line.gap:before {\n    position: absolute;\n    content: attr(data-size);\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n    width: calc(12 * var(--zoompx));\n    height: calc(12 * var(--zoompx));\n    margin-top: calc(-6 * var(--zoompx));\n    margin-left: calc(-6 * var(--zoompx));\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n${IS_WEBKIT ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`);\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n","import { PREFIX, IS_WEBKIT } from \"./consts\";\nimport { prefixNames } from \"framework-utils\";\nimport { splitBracket, isUndefined, isObject, splitUnit, IObject } from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertCSStoMatrix, convertMatrixtoCSS,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, caculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    getRad,\n    ignoreDimension,\n} from \"@moveable/matrix\";\n\nimport MoveableManager from \"./MoveableManager\";\nimport { MoveableManagerState, Able, MoveableClientRect } from \"./types\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransform(target: SVGElement | HTMLElement, isInit: true): number[];\nexport function getTransform(target: SVGElement | HTMLElement, isInit?: false): \"none\" | number[];\nexport function getTransform(target: SVGElement | HTMLElement, isInit?: boolean) {\n    const transform = getComputedStyle(target).transform!;\n\n    if (!transform || (transform === \"none\" && !isInit)) {\n        return \"none\";\n    }\n    return getTransformMatrix(transform);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    const value = splitBracket(transform).value!;\n    return value.split(/s*,\\s*/g).map(v => parseFloat(v));\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = false;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const transform = style.transform;\n        position = style.position!;\n\n        if (position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    container: SVGElement | HTMLElement | null,\n    style: CSSStyleDeclaration,\n    isFixed: boolean,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    if (isFixed) {\n        const containerClientRect = (container || document.documentElement).getBoundingClientRect();\n\n        offsetLeft -= containerClientRect.left;\n        offsetTop -= containerClientRect.top;\n    }\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        hasOffset = true;\n\n        if (tagName === \"g\") {\n            offsetLeft = 0;\n            offsetTop = 0;\n        } else {\n            [\n                offsetLeft, offsetTop, origin[0], origin[1],\n            ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n        }\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n    }\n    return {\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft, offsetTop],\n        origin,\n    };\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container: SVGElement | HTMLElement | null,\n    prevMatrix?: number[],\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: number[][] = [];\n    let isEnd = false;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    const offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    if (prevMatrix) {\n        isEnd = target === container;\n        if (prevMatrix.length > 10) {\n            is3d = true;\n            n = 4;\n        }\n        container = target.parentElement;\n    }\n\n    while (el && !isEnd) {\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const tagName = el.tagName.toLowerCase();\n        const position = style.position;\n        const isFixed = position === \"fixed\";\n        const styleTransform = style.transform!;\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(styleTransform));\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n            const matrixesLength = matrixes.length;\n\n            for (let i = 0; i < matrixesLength; ++i) {\n                matrixes[i] = convertDimension(matrixes[i], 3, 4);\n            }\n        }\n        if (is3d &&  length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            hasOffset,\n            isSVG,\n            origin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, container, style, isFixed);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            matrixes.push(\n                // scale matrix for svg's SVGElements.\n                getSVGMatrix(el as SVGSVGElement, n),\n                createIdentityMatrix(n),\n            );\n        }\n        const {\n            offsetParent,\n            isEnd: isOffsetEnd,\n            isStatic,\n        } = getOffsetInfo(el, container);\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && position === \"relative\") {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            isEnd = isEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n\n        if (hasOffset && offsetContainer !== offsetParent) {\n            // border\n            parentClientLeft = offsetParent.clientLeft;\n            parentClientTop = offsetParent.clientTop;\n        }\n        matrixes.push(\n            // absolute matrix\n            getAbsoluteMatrix(matrix, n, origin),\n            // offset matrix (offsetPos + clientPos(border))\n            createOriginMatrix(hasOffset ? [\n                offsetLeft - el.scrollLeft + parentClientLeft,\n                offsetTop - el.scrollTop + parentClientTop,\n            ] : [el, origin] as any, n),\n        );\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            isEnd = isOffsetEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        is3d,\n    };\n}\nexport function caculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null,\n    prevMatrix?: number[],\n    prevRootMatrix?: number[],\n    prevN?: number,\n): [number[], number[], number[], number[], number[], string, number[], boolean] {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        offsetContainer,\n    } = getMatrixStackInfo(target, container, prevMatrix);\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, prevRootMatrix);\n\n    const n = isRoot3d || is3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    const originalContainer = container || document.body;\n    let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let targetMatrix = prevTargetMatrix;\n    let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n    const endContainer = getOffsetInfo(originalContainer, originalContainer, true).offsetParent;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isRoot3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n        matrixes.forEach((matrix, i) => {\n            matrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n    if (is3d && !isRoot3d) {\n        rootMatrixes.forEach((matrix, i) => {\n            rootMatrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    if (!prevRootMatrix) {\n        rootMatrixes.forEach(matrix => {\n            rootMatrix = multiply(rootMatrix, matrix, n);\n        });\n    }\n    matrixes.forEach((matrix, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // caculate for SVGElement\n        if (isObject(matrix[n - 1])) {\n            [matrix[n - 1], matrix[2 * n - 1]] =\n                getSVGOffset(\n                    matrix[n - 1] as any,\n                    endContainer,\n                    n,\n                    matrix[2 * n - 1] as any,\n                    allMatrix,\n                    matrixes[i + 1],\n                );\n        }\n        allMatrix = multiply(allMatrix, matrix, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const transform = `${isMatrix3d ? \"matrix3d\" : \"matrix\"}(${\n        convertMatrixtoCSS(isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix)\n        })`;\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n    return [\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        transform,\n        transformOrigin,\n        is3d || isRoot3d,\n    ];\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n - 1],\n        scaleMatrix[2 * n - 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox) {\n        return [0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function caculatePosition(matrix: number[], pos: number[], n: number) {\n    return caculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function caculatePoses(matrix: number[], width: number, height: number, n: number) {\n    const pos1 = caculatePosition(matrix, [0, 0], n);\n    const pos2 = caculatePosition(matrix, [width, 0], n);\n    const pos3 = caculatePosition(matrix, [0, height], n);\n    const pos4 = caculatePosition(matrix, [width, height], n);\n\n    return [pos1, pos2, pos3, pos4];\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function caculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = caculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    el: SVGElement,\n    container: HTMLElement | SVGElement,\n    n: number, origin: number[], beforeMatrix: number[], absoluteMatrix: number[]) {\n\n    const [width, height] = getSize(el);\n    const containerClientRect = container.getBoundingClientRect();\n    const rect = el.getBoundingClientRect();\n    const rectLeft = rect.left - containerClientRect.left + container.scrollLeft;\n    const rectTop = rect.top - containerClientRect.top + container.scrollTop;\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        absoluteMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = caculateRect(mat, width, height, n);\n    const posOrigin = caculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            caculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            caculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            absoluteMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = caculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function caculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number): [\n    number[],\n    number[],\n    number[],\n    number[],\n    number[],\n    number[],\n    1 | -1,\n] {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = caculatePoses(matrix, width, height, n);\n    let [originX, originY] = caculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const center = [\n        (x1 + x2 + x3 + x4) / 4,\n        (y1 + y2 + y3 + y4) / 4,\n    ];\n    const pos1Rad = getRad(center, [x1, y1]);\n    const pos2Rad = getRad(center, [x2, y2]);\n    const direction =\n        (pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI) || (pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI)\n            ? 1 : -1;\n\n    return [\n        [left, top, right, bottom],\n        [originX, originY],\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n        direction,\n    ];\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad)`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translate(${x}px, ${y}px) rotate(${rotation}rad)`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = window.getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = window.getComputedStyle(target),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (!hasOffset && !width && !height) {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n\n        return [bbox.width, bbox.height];\n    }\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nexport function getTargetInfo(\n    target?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    state?: Partial<MoveableManagerState> | false | undefined,\n): Partial<MoveableManagerState> {\n    let left = 0;\n    let top = 0;\n    let right = 0;\n    let bottom = 0;\n    let origin = [0, 0];\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let rootMatrix = createIdentityMatrix3();\n    let offsetMatrix = createIdentityMatrix3();\n    let beforeMatrix = createIdentityMatrix3();\n    let matrix = createIdentityMatrix3();\n    let targetMatrix = createIdentityMatrix3();\n    let width = 0;\n    let height = 0;\n    let transformOrigin = [0, 0];\n    let direction: 1 | -1 = 1;\n    let beforeDirection: 1 | -1 = 1;\n    let is3d = false;\n    let targetTransform = \"\";\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rotation = 0;\n\n    const prevMatrix = state ? state.beforeMatrix : undefined;\n    const prevRootMatrix = state ? state.rootMatrix : undefined;\n    const prevN = state ? (state.is3d ? 4 : 3) : undefined;\n\n    if (target) {\n        if (state) {\n            width = state.width!;\n            height = state.height!;\n        } else {\n            const style = getComputedStyle(target);\n\n            width = (target as HTMLElement).offsetWidth;\n            height = (target as HTMLElement).offsetHeight;\n\n            if (isUndefined(width)) {\n                [width, height] = getSize(target, style, true);\n            }\n        }\n        [\n            rootMatrix,\n            beforeMatrix,\n            offsetMatrix,\n            matrix,\n            targetMatrix,\n            targetTransform, transformOrigin, is3d,\n        ] = caculateMatrixStack(\n            target, container!, rootContainer!,\n            prevMatrix, prevRootMatrix, prevN,\n        );\n\n        [\n            [left, top, right, bottom],\n            origin,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            direction,\n        ] = caculateMoveablePosition(matrix, transformOrigin, width, height);\n\n        const n = is3d ? 4 : 3;\n        let beforePos = [0, 0];\n\n        [\n            beforePos, beforeOrigin, , , , , beforeDirection,\n        ] = caculateMoveablePosition(offsetMatrix, plus(transformOrigin, getOrigin(targetMatrix, n)), width, height);\n\n        beforeOrigin = [\n            beforeOrigin[0] + beforePos[0] - left,\n            beforeOrigin[1] + beforePos[1] - top,\n        ];\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        rotation = getRotationRad([pos1, pos2], direction);\n    }\n\n    return {\n        rotation,\n        targetClientRect,\n        containerClientRect,\n        beforeDirection,\n        direction,\n        target,\n        left,\n        top,\n        right,\n        bottom,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        targetMatrix,\n        matrix,\n        targetTransform,\n        is3d,\n        beforeOrigin,\n        origin,\n        transformOrigin,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    const { left, width, top, bottom, right, height } = el.getBoundingClientRect();\n\n    const rect: MoveableClientRect = {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function throttle(num: number, unit: number) {\n    if (!unit) {\n        return num;\n    }\n    return Math.round(num / unit) * unit;\n}\nexport function throttleArray(nums: number[], unit: number) {\n    nums.forEach((_, i) => {\n        nums[i] = throttle(nums[i], unit);\n    });\n    return nums;\n}\n\nexport function unset(self: any, name: string) {\n    if (self[name]) {\n        self[name].unset();\n        self[name] = null;\n    }\n}\n\nexport function getOrientationDirection(pos: number[], pos1: number[], pos2: number[]) {\n    return (pos[0] - pos1[0]) * (pos2[1] - pos1[1]) - (pos[1] - pos1[1]) * (pos2[0] - pos1[0]);\n}\nexport function isInside(pos: number[], pos1: number[], pos2: number[], pos3: number[], pos4: number[]) {\n    const k1 = getOrientationDirection(pos, pos1, pos2);\n    const k2 = getOrientationDirection(pos, pos2, pos4);\n    const k3 = getOrientationDirection(pos, pos4, pos1);\n\n    const k4 = getOrientationDirection(pos, pos2, pos4);\n    const k5 = getOrientationDirection(pos, pos4, pos3);\n    const k6 = getOrientationDirection(pos, pos3, pos2);\n    const signs1 = [k1, k2, k3];\n    const signs2 = [k4, k5, k6];\n\n    if (\n        signs1.every(sign => sign >= 0)\n        || signs1.every(sign => sign <= 0)\n        || signs2.every(sign => sign >= 0)\n        || signs2.every(sign => sign <= 0)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: MoveableManager,\n    e: any,\n    params: Pick<T, Exclude<keyof T, \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" | \"datas\" | \"currentTarget\">>,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    return {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        datas: datas.datas,\n    } as any;\n}\n\nexport function triggerEvent<T extends IObject<any>, U extends keyof T>(\n    moveable: MoveableManager<T>,\n    name: U & string,\n    params: T[U] extends ((e: infer P) => any) | undefined ? P : {},\n    isManager?: boolean,\n): any {\n    if (isManager) {\n        MoveableManager.prototype.triggerEvent.call(moveable, name, params);\n    }\n    return moveable.triggerEvent(name, params);\n}\n\nexport function getComputedStyle(el: HTMLElement | SVGElement, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function getKeepRatioHeight(width: number, isWidth: boolean, ratio: number) {\n    return width * (isWidth ? ratio : 1 / ratio);\n}\nexport function getKeepRatioWidth(height: number, isWidth: boolean, ratio: number) {\n    return height * (isWidth ? 1 / ratio : ratio);\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = caculate(\n        invert(rootMatrix, n),\n        convertPositionMatrix([e.distX, e.distY], n),\n        n,\n    );\n\n    return e;\n}\n","import MoveableManager from \"../MoveableManager\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { IObject } from \"@daybrush/utils\";\n\nexport function triggerRenderStart(\n    moveable: MoveableManager<any>,\n    isGroup: boolean,\n    e: any,\n) {\n    const params: IObject<any> = fillParams(moveable, e, {\n        isPinch: !!e.isPinch,\n    });\n\n    const eventAffix = isGroup ? \"Group\" : \"\";\n\n    if (isGroup) {\n        params.targets = moveable.props.targets;\n    }\n    triggerEvent(moveable, `onRender${eventAffix}Start`, params);\n}\nexport function triggerRender(\n    moveable: MoveableManager<any>,\n    isGroup: boolean,\n    e: any,\n) {\n    const params: IObject<any> = fillParams(moveable, e, {\n        isPinch: !!e.isPinch,\n    });\n\n    const eventAffix = isGroup ? \"Group\" : \"\";\n\n    if (isGroup) {\n        params.targets = moveable.props.targets;\n    }\n    triggerEvent(moveable, `onRender${eventAffix}`, params);\n}\nexport function triggerRenderEnd(\n    moveable: MoveableManager<any>,\n    isGroup: boolean,\n    e: any,\n) {\n    const params: IObject<any> = fillParams(moveable, e, {\n        isPinch: !!e.sPinch,\n        isDrag: e.isDrag,\n    });\n\n    const eventAffix = isGroup ? \"Group\" : \"\";\n\n    if (isGroup) {\n        params.targets = moveable.props.targets;\n    }\n    triggerEvent(moveable, `onRender${eventAffix}End`, params);\n}\n","import MoveableManager from \"./MoveableManager\";\nimport Dragger from \"@daybrush/drag\";\nimport { Able } from \"./types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { triggerRenderStart, triggerRenderEnd, triggerRender } from \"./ables/triggerRender\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { convertDragDist } from \"./utils\";\n\nexport function triggerAble<T extends IObject<any>>(\n    moveable: MoveableManager<any>,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    isReqeust?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n\n    if (isStart && eventAffix.indexOf(\"Control\") > -1 && !e.isRequest && moveable.areaElement === e.inputEvent.target) {\n        return false;\n    }\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType.indexOf(\"After\") > -1;\n\n    if (isStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isAfter) {\n       convertDragDist(moveable.state, e);\n    }\n    const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Array<Able<T>> = (moveable as any)[ableType];\n    const events = ables.filter((able: any) => able[eventName]);\n    const datas = e.datas;\n    const renderDatas = datas.render || (datas.render = {});\n    const renderEvent = {...e, datas: renderDatas, originalDatas: datas };\n\n    const results = events.filter((able: any) => {\n        const condition = isStart && able[conditionName];\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (!condition || condition(e, moveable)) {\n            return able[eventName](moveable, {...e, datas: nextDatas, originalDatas: datas });\n        }\n        return false;\n    });\n    const isUpdate = results.length;\n\n    if (isStart) {\n        if (events.length && !isUpdate) {\n            moveable.state.dragger = null;\n\n            if ((moveable as MoveableGroup).moveables) {\n                (moveable as MoveableGroup).moveables.forEach(childeMoveable => {\n                    childeMoveable.state.dragger = null;\n                });\n            }\n            return false;\n        }\n        triggerRenderStart(moveable, isGroup, renderEvent);\n    } else if (isEnd) {\n        triggerRenderEnd(moveable, isGroup, renderEvent);\n    } else if (isUpdate) {\n        triggerRender(moveable, isGroup, renderEvent);\n    }\n    if (isEnd) {\n        moveable.state.dragger = null;\n    }\n    if (moveable.isUnmounted) {\n        return;\n    }\n    if (!isStart && isUpdate) {\n        if (results.some(able => able.updateRect) && !isGroup) {\n            moveable.updateRect(eventType, false, false);\n        } else {\n            moveable.updateRect(eventType, true, false);\n        }\n    }\n    if (((!isStart && isUpdate) || (isEnd && !isUpdate)) && !isReqeust) {\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n}\nexport function getAreaAbleDragger<T>(\n    moveable: MoveableManager<T>,\n    ableType: string,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n\n    return getAbleDragger(moveable, controlBox, ableType, eventAffix, {\n        dragstart: (e: any) => {\n            const eventTarget = e.inputEvent.target;\n            const areaElement = moveable.areaElement;\n\n            if (eventTarget === areaElement || eventTarget.className.indexOf(\"moveable-area\") > -1) {\n                return true;\n            }\n            return false;\n        },\n        pinchstart: (e: any) => {\n            const eventTarget = e.inputEvent.target;\n            const areaElement = moveable.areaElement;\n\n            if (eventTarget === areaElement || eventTarget.className.indexOf(\"moveable-area\") > -1) {\n                return true;\n            }\n            return false;\n        },\n    });\n}\nexport function getAbleDragger<T>(\n    moveable: MoveableManager<T>,\n    target: HTMLElement | SVGElement,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const options: IObject<any> = {\n        container: window,\n        pinchThreshold: moveable.props.pinchThreshold,\n    };\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            const eventName = `${eventOperation}${eventType.toLowerCase()}`;\n            options[eventName]\n                = (e: any) => {\n                    if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                        return false;\n                    }\n                    return triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n                };\n        });\n    });\n\n    return new Dragger(target!, options);\n}\n","import * as React from \"react\";\nimport { MOVEABLE_CSS, PREFIX } from \"./consts\";\nimport {\n    prefix, getLineStyle,\n    getTargetInfo,\n    unset,\n    createIdentityMatrix3,\n    isInside,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    resetClientRect,\n    throttle,\n    flat,\n    groupByMap,\n} from \"./utils\";\nimport styled from \"react-css-styled\";\nimport Dragger from \"@daybrush/drag\";\nimport { ref } from \"framework-utils\";\nimport { MoveableManagerProps, MoveableManagerState, Able, RectInfo, Requester } from \"./types\";\nimport { getAbleDragger, triggerAble, getAreaAbleDragger } from \"./getAbleDragger\";\nimport CustomDragger from \"./CustomDragger\";\nimport { getRad, plus } from \"@moveable/matrix\";\nimport { IObject } from \"@daybrush/utils\";\n\nconst ControlBoxElement = styled(\"div\", MOVEABLE_CSS);\n\nfunction renderLine(direction: string, pos1: number[], pos2: number[], index: number) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${index}`} className={prefix(\"line\", \"direction\", direction)}\n        data-rotation={rotation}\n        data-direction={direction} style={getLineStyle(pos1, pos2, rad)}></div>;\n}\nexport default class MoveableManager<T = {}, U = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState<U>> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        parentPosition: null,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n    };\n    public state: MoveableManagerState<U> = {\n        container: null,\n        target: null,\n        beforeMatrix: createIdentityMatrix3(),\n        matrix: createIdentityMatrix3(),\n        targetMatrix: createIdentityMatrix3(),\n        targetTransform: \"\",\n        is3d: false,\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        transformOrigin: [0, 0],\n        direction: 1,\n        beforeDirection: 1,\n        beforeOrigin: [0, 0],\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        targetClientRect: resetClientRect(),\n        containerClientRect: resetClientRect(),\n        rotation: 0,\n    } as any;\n    public targetAbles: Array<Able<T>> = [];\n    public controlAbles: Array<Able<T>> = [];\n    public controlBox!: typeof ControlBoxElement extends new (...args: any[]) => infer K ? K : never;\n    public areaElement!: HTMLElement;\n    public targetDragger!: Dragger;\n    public controlDragger!: Dragger;\n    public customDragger!: CustomDragger;\n    public isUnmounted = false;\n\n    public render() {\n        const props = this.props;\n        const { edge, parentPosition, className, target: propsTarget, zoom } = this.props;\n\n        this.checkUpdate();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const { left, top, pos1, pos2, pos3, pos4, target: stateTarget, direction } = this.state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n\n        return (\n            <ControlBoxElement\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\")} ${className}`} style={{\n                    \"position\": \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate(${left - parentLeft}px, ${top - parentTop}px) translateZ(50px)`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {renderLine(edge ? \"n\" : \"\", pos1, pos2, 0)}\n                {renderLine(edge ? \"e\" : \"\", pos2, pos4, 1)}\n                {renderLine(edge ? \"w\" : \"\", pos1, pos3, 2)}\n                {renderLine(edge ? \"s\" : \"\", pos3, pos4, 3)}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container } = props;\n\n        this.updateEvent(props);\n        if (!container && !parentMoveable) {\n            this.updateRect(\"End\", false, true);\n        }\n    }\n    public componentDidUpdate(prevProps: MoveableManagerProps<T>) {\n        this.updateEvent(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        unset(this, \"targetDragger\");\n        unset(this, \"controlDragger\");\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, container } = this.props;\n\n        return container!\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    public isMoveableElement(target: HTMLElement | SVGElement) {\n        return target && ((target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1);\n    }\n    public dragStart(e: MouseEvent | TouchEvent) {\n        if (this.targetDragger) {\n            this.targetDragger.onDragStart(e);\n        }\n    }\n    public isInside(clientX: number, clientY: number) {\n        const { pos1, pos2, pos3, pos4, target, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        const { left, top } = targetClientRect;\n        const pos = [clientX - left, clientY - top];\n\n        return isInside(pos, pos1, pos2, pos4, pos3);\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(target, container, container, rootContainer || container,\n                isTarget ? state : undefined),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    public updateEvent(prevProps: MoveableManagerProps<T>) {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const target = this.props.target;\n        const prevTarget = prevProps.target;\n        const dragArea = this.props.dragArea;\n        const prevDragArea = prevProps.dragArea;\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isUnset = (!hasTargetAble && this.targetDragger)\n            || isTargetChanged\n            || prevDragArea !== dragArea;\n\n        if (isUnset) {\n            unset(this, \"targetDragger\");\n            this.updateState({ dragger: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlDragger\");\n        }\n\n        if (target && hasTargetAble && !this.targetDragger) {\n            if (dragArea) {\n                this.targetDragger = getAreaAbleDragger(this, \"targetAbles\", \"\");\n            } else {\n                this.targetDragger = getAbleDragger(this, target!, \"targetAbles\", \"\");\n            }\n        }\n        if (!this.controlDragger && hasControlAble) {\n            this.controlDragger = getAbleDragger(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n        if (isUnset) {\n            this.unsetAbles();\n        }\n    }\n    public isDragging() {\n        return (this.targetDragger ? this.targetDragger.isFlag() : false)\n        || (this.controlDragger ? this.controlDragger.isFlag() : false);\n    }\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n        };\n    }\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix  = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    isRequest: true,\n                }, isInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    isRequest: true,\n                });\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            isRequest: true,\n        }, isInstant);\n\n        return param.isInstant ? requester.request(param).requestEnd() : requester;\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n\n        this.updateState({ target, container });\n\n        if (!parentMoveable && (container || this.controlBox)) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    protected unsetAbles() {\n        if (this.targetAbles.filter(able => {\n            if (able.unset) {\n                able.unset(this);\n                return true;\n            }\n            return false;\n        }).length) {\n            this.forceUpdate();\n        }\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && props[able.name]);\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            this.setState(nextState);\n        } else {\n            const state = this.state as any;\n\n            for (const name in nextState) {\n                state[name] = nextState[name];\n            }\n        }\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables.filter(able => able && props[able.name]);\n        const Renderer = { createElement: React.createElement };\n\n        return groupByMap(flat<any>(\n            filterAbles(enabledAbles, [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n            return render!(this, Renderer) || [];\n        })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n}\n","import { Client } from \"@daybrush/drag\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { PinchableProps, Able, SnappableState, OnPinchStart, OnPinch, OnPinchEnd } from \"../types\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { getRad } from \"@moveable/matrix\";\n\nfunction getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport default {\n    name: \"pinchable\",\n    updateRect: true,\n    props: {\n        pinchable: Boolean,\n        pinchThreshold: Number,\n    },\n    pinchStart(\n        moveable: MoveableManager<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, touches, targets } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        const parentRotate = getRotatiion(touches);\n\n        pinchAbles.forEach(able => {\n            datas[able.name + \"Datas\"] = {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: datas[able.name + \"Datas\"],\n                parentRotate,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManager<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, scale: pinchScale, distance, touches, inputEvent, targets } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentRotate = getRotatiion(touches);\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: datas[able.name + \"Datas\"],\n                inputEvent,\n                parentDistance,\n                parentRotate,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManager<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: datas[able.name + \"Datas\"],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroup, e: any) {\n        return this.pinchStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroup, e: any) {\n        return this.pinch(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroup, e: any) {\n        return this.pinchEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n","import { MoveableManagerState, OnCustomDrag } from \"./types\";\nimport { convertDragDist } from \"./utils\";\n\nexport function setCustomDrag(\n    state: MoveableManagerState<any>,\n    delta: number[],\n    inputEvent: any,\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n    const result = state.dragger!.move(delta, inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable  || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isDrag: true,\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n    };\n}\n\nexport default class CustomDragger {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], inputEvent: any)  {\n        this.isDrag = false;\n        this.isFlag = false;\n        this.datas = {\n            draggable: {},\n        };\n        return this.move(client, inputEvent);\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n            this.isDrag = true;\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentDragger: this,\n        };\n    }\n}\n","import MoveableGroup from \"./MoveableGroup\";\nimport { Able } from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport { IObject, isFunction } from \"@daybrush/utils\";\nimport CustomDragger, { setCustomDrag } from \"./CustomDragger\";\nexport function triggerChildDragger(\n    moveable: MoveableGroup,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const inputEvent = e.inputEvent;\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const childs = moveable.moveables.map((child, i) => {\n        let childEvent = {};\n\n        if (isStart) {\n            childEvent = new CustomDragger().dragStart(delta, inputEvent);\n        } else {\n            if (!child.state.dragger) {\n                child.state.dragger = datas.childDraggers[i];\n            }\n            childEvent = setCustomDrag(child.state, delta, inputEvent, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(child,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            child.state.dragger = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childDraggers = moveable.moveables.map(child => child.state.dragger);\n    }\n    return childs;\n}\nexport function triggerChildAble<T extends Able>(\n    moveable: MoveableGroup,\n    able: T,\n    type: keyof T & string,\n    datas: IObject<any>,\n    eachEvent: ((movebale: MoveableManager, datas: IObject<any>) => any) | IObject<any>,\n    callback?: (moveable: MoveableManager<any>, datas: IObject<any>, result: any, index: number) => any,\n) {\n    const name = able.name!;\n    const ableDatas = datas[name] || (datas[name] = []);\n    const isEnd = !!type.match(/End$/g);\n    const childs = moveable.moveables.map((child, i) => {\n        const childDatas = ableDatas[i] || (ableDatas[i] = {});\n\n        const childEvent = isFunction(eachEvent) ? eachEvent(child, childDatas) : eachEvent;\n        const result = (able as any)[type]!(child,  { ...childEvent, datas: childDatas, parentFlag: true });\n\n        result && callback && callback(child, childDatas, result, i);\n\n        if (isEnd) {\n            child.state.dragger = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import {\n    invert, caculate, minus, plus,\n    convertPositionMatrix, average,\n    createScaleMatrix, multiply,\n} from \"@moveable/matrix\";\nimport MoveableManager from \"./MoveableManager\";\nimport { caculatePoses, getAbsoluteMatrix, getAbsolutePosesByState } from \"./utils\";\nimport { splitUnit } from \"@daybrush/utils\";\nimport { MoveableManagerState, GroupableProps, ResizableProps } from \"./types\";\n\nexport function setDragStart(moveable: MoveableManager<any>, { datas }: any) {\n    const {\n        matrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = matrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(matrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = caculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = caculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        caculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        caculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\nexport function caculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(...nextPoses.map(pos => pos[0])),\n        average(...nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection([pos4, pos3, pos2, pos1], direction);\n}\nfunction getStartPos(poses: number[][], direction: number[]) {\n    const [\n        startPos1,\n        startPos2,\n        startPos3,\n        startPos4,\n    ] = poses;\n    return getPosByReverseDirection([startPos1, startPos2, startPos3, startPos4], direction);\n}\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    direction: number[],\n) {\n    const poses = caculatePoses(matrix, width, height, n);\n    const pos = getPosByReverseDirection(poses, direction);\n    const distX = startPos[0] - pos[0];\n    const distY = startPos[1] - pos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\nexport function getScaleDist(\n    moveable: MoveableManager<any>,\n    scale: number[],\n    direction: number[],\n    fixedPosition: number[],\n) {\n    const state = moveable.state;\n    const {\n        is3d,\n        left,\n        top,\n        width,\n        height,\n    } = state;\n\n    const n = is3d ? 4 : 3;\n    const groupable = moveable.props.groupable;\n    const nextMatrix = scaleMatrix(moveable.state, scale);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, direction);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\n\nexport function getResizeDist(\n    moveable: MoveableManager<GroupableProps>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = caculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, direction);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getStartDirection(\n    moveable: MoveableManager<ResizableProps>,\n    direction: number[],\n) {\n    if (!direction[0] && !direction[1]) {\n        return [0, 0];\n    }\n    const {\n        baseDirection = [-1, -1],\n    } = moveable.props;\n    return [\n        direction[0] ? direction[0] : baseDirection[0] * -1,\n        direction[1] ? direction[1] : baseDirection[1] * -1,\n    ];\n}\nexport function getAbsoluteFixedPosition(\n    moveable: MoveableManager<ResizableProps>,\n    direction: number[],\n) {\n    return getStartPos(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { prefix } from \"../utils\";\nimport { hasClass } from \"@daybrush/utils\";\n\nexport function directionCondition(e: any) {\n    if (e.isRequest) {\n        return e.parentDirection!!;\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    Guideline, ResizableProps, ScalableProps, SnapOffsetInfo\n} from \"../../types\";\nimport MoveableManager from \"../../MoveableManager\";\nimport { selectValue, throttle, getAbsolutePosesByState, getRect, groupBy } from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../DraggerUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@moveable/matrix\";\n\nexport function getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    snapThreshold: number,\n    index: number,\n    [start, end]: number[],\n    [otherStart, otherEnd]: number[],\n) {\n    const totalGuidelines: Guideline[] = [];\n    const otherIndex = index ? 0 : 1;\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n\n    const elementGuidelines\n        = groupBy(guidelines.filter(({ type: guidelineType }) => guidelineType === type), ({ element }) => element)\n        .map(group => group[0])\n        .filter(({ pos, sizes }) => pos[otherIndex] <= otherEnd && otherStart <= pos[otherIndex] + sizes![otherIndex]);\n\n    elementGuidelines.forEach(guideline1 => {\n        const elementStart = guideline1.pos[index];\n        const elementEnd = elementStart + guideline1.sizes![index];\n\n        elementGuidelines.forEach(({\n            pos: guideline2Pos,\n            sizes: guideline2Sizes,\n            element: guideline2Element,\n        }) => {\n            const targetStart = guideline2Pos[index];\n            const targetEnd = targetStart + guideline2Sizes![index];\n            let pos = 0;\n            let gap = 0;\n            let canSnap = true;\n\n            if (elementEnd <= targetStart) {\n                // gap -\n                gap = elementEnd - targetStart;\n                pos = targetEnd - gap;\n\n                if (start < pos - snapThreshold) {\n                    canSnap = false;\n                }\n                // element target moveable\n            } else if (targetEnd <= elementStart) {\n                // gap +\n                gap = elementStart - targetEnd;\n                pos = targetStart - gap;\n\n                if (end > pos + snapThreshold) {\n                    canSnap = false;\n                }\n                // moveable target element\n            } else {\n                return;\n            }\n            if (canSnap) {\n                totalGuidelines.push({\n                    pos: otherType === \"vertical\" ? [pos, guideline2Pos[1]] : [guideline2Pos[0], pos],\n                    element: guideline2Element,\n                    sizes: guideline2Sizes,\n                    size: 0,\n                    type: otherType,\n                    gap,\n                    gapGuidelines: elementGuidelines,\n                });\n            }\n            if (elementEnd <= start && end <= targetStart) {\n                // elementEnd   moveable   target\n                const centerPos = ((targetStart + elementEnd) - (end - start)) / 2;\n\n                if (throttle(start - (centerPos - snapThreshold), 0.1) >= 0) {\n                    totalGuidelines.push({\n                        pos: otherType === \"vertical\" ? [centerPos, guideline2Pos[1]] : [guideline2Pos[0], centerPos],\n                        element: guideline2Element,\n                        sizes: guideline2Sizes,\n                        size: 0,\n                        type: otherType,\n                        gap: elementEnd - start,\n                        gapGuidelines: elementGuidelines,\n                    });\n                }\n            }\n        });\n    });\n    return totalGuidelines;\n}\nexport function getTotalGuidelines(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n) {\n    const {\n        guidelines,\n        containerClientRect: {\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n        },\n    } = moveable.state;\n    const props = moveable.props;\n    const {\n        snapHorizontal = true,\n        snapVertical = true,\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n    } = props;\n    const totalGuidelines: Guideline[] = [...guidelines];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n        const elementGuidelines = (guidelines as Guideline[]).filter(({ element }) => element);\n\n        totalGuidelines.push(...getGapGuidelines(\n            elementGuidelines,\n            \"horizontal\",\n            snapThreshold,\n            0,\n            [left, right],\n            [top, bottom],\n        ), ...getGapGuidelines(\n            elementGuidelines,\n            \"vertical\",\n            snapThreshold,\n            1,\n            [top, bottom],\n            [left, right],\n        ));\n    }\n\n    if (snapHorizontal && horizontalGuidelines) {\n        horizontalGuidelines!.forEach(pos => {\n            totalGuidelines.push({ type: \"horizontal\", pos: [0, throttle(pos, 0.1)], size: containerWidth! });\n        });\n    }\n    if (snapVertical && verticalGuidelines) {\n        verticalGuidelines!.forEach(pos => {\n            totalGuidelines.push({ type: \"vertical\", pos: [throttle(pos, 0.1), 0], size: containerHeight! });\n        });\n    }\n\n    return totalGuidelines;\n}\nexport function checkSnapPoses(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    snapCenter?: boolean,\n    customSnapThreshold?: number,\n) {\n    const totalGuidelines = getTotalGuidelines(moveable);\n    const props = moveable.props;\n    const {\n        snapElement = true,\n    } = props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return {\n        vertical: checkSnap(\n            totalGuidelines,\n            \"vertical\", posesX, snapThreshold,\n            snapCenter!,\n            snapElement,\n        ),\n        horizontal: checkSnap(\n            totalGuidelines,\n            \"horizontal\", posesY, snapThreshold,\n            snapCenter!,\n            snapElement,\n        ),\n    };\n}\n\nexport function checkSnapKeepRatio(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): {\n    vertical: SnapOffsetInfo,\n    horizontal: SnapOffsetInfo,\n} {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    const [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    rect: {\n        left?: number,\n        top?: number,\n        bottom?: number,\n        right?: number,\n        center?: number,\n        middle?: number,\n    },\n    isCenter: boolean,\n    customSnapThreshold?: number,\n) {\n    const snapCenter = moveable.props.snapCenter;\n    const isSnapCenter = snapCenter! && isCenter;\n\n    let verticalNames: Array<\"left\" | \"center\" | \"right\"> = [\"left\", \"right\"];\n    let horizontalNames: Array<\"top\" | \"middle\" | \"bottom\"> = [\"top\", \"bottom\"];\n\n    if (isSnapCenter) {\n        verticalNames.push(\"center\");\n        horizontalNames.push(\"middle\");\n    }\n    verticalNames = verticalNames.filter(name => name in rect);\n    horizontalNames = horizontalNames.filter(name => name in rect);\n\n    return checkSnapPoses(\n        moveable,\n        verticalNames.map(name => rect[name]!),\n        horizontalNames.map(name => rect[name]!),\n        isSnapCenter,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: Guideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n    snapCenter: boolean,\n    snapElement: boolean,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map(targetPos => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type, center, element } = guideline;\n            if (\n                (!snapElement && element)\n                || (!snapCenter && center)\n                || type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n        return {\n            pos: targetPos,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    return {\n        isSnap: snapPosInfos.length > 0,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManager<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), true, 1);\n}\n\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        const aDist = Math.abs(aOffset);\n        const bDist = Math.abs(bOffset);\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        } else if (a.isBound && b.isBound) {\n            return bDist - aDist;\n        } else if (a.isBound) {\n            return -1;\n        } else if (b.isBound) {\n            return 1;\n        } else if (a.isSnap && b.isSnap) {\n            return aDist - bDist;\n        } else if (a.isSnap) {\n            return -1;\n        } else if (b.isSnap) {\n            return 1;\n        } else if (aDist < TINY_NUM) {\n            return 1;\n        } else if (bDist < TINY_NUM) {\n            return -1;\n        }\n        return aDist - bDist;\n    })[0];\n}\n","import { maxOffset, getDistSize, throttle } from \"../../utils\";\nimport { average, rotate, getRad } from \"@moveable/matrix\";\nimport MoveableManager from \"../../MoveableManager\";\nimport { SnappableProps, DraggableProps, RotatableProps } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../DraggerUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average(line[0][0], line[1][0]);\n    const cy = average(line[0][1], line[1][1]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], error: number = TINY_NUM) {\n    const centerSign = hitTestLine(dots[0], line) <= 0;\n\n    return dots.slice(1).every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold: number = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManager<SnappableProps>,\n    line: number[][],\n    center: number[],\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const {\n        horizontal: isHorizontalStart,\n        vertical: isVerticalStart,\n    } = isStartLine(center, line);\n\n    if (isSameStartLine([\n        center,\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n\n    // test vertical\n    const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart);\n    const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart);\n    const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n) {\n    const dot1 = line[0];\n    const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n    const dy1 = dot2[1] - dot1[1];\n    const dx1 = dot2[0] - dot1[0];\n\n    const dy2 = boundDot2[1] - boundDot1[1];\n    const dx2 = boundDot2[0] - boundDot1[0];\n\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        if (dx1) {\n            const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        }\n    } else if (!dy2) {\n        // horizontal\n\n        if (dy1) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            const a = dy1 / dx1;\n            const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManager<SnappableProps>,\n    lines: number[][][],\n    center: number[],\n    datas: any,\n) {\n    return lines.map(([multiple, pos1, pos2]) => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, [pos1, pos2], center);\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ?  2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManager<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckSnapLines(poses, [0, 0], false).map(([sign, pos1, pos2]) => {\n        return [\n            sign.map(dir => Math.abs(dir) * 2),\n            pos1,\n            pos2,\n        ];\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport function getCheckSnapLines(\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n) {\n    return getCheckSnapLineDirections(direction, keepRatio).map(([sign, dir1, dir2]) => {\n        return [\n            sign,\n            getPosByDirection(poses, dir1),\n            getPosByDirection(poses, dir2),\n        ];\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    const dots = [\n        center,\n        ...boundDots,\n    ];\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some((line, i) => !isSameStartLine(dots, line));\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManager<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce<number[]>((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManager<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    const lines = [\n        [pos1, pos2],\n        [pos2, pos4],\n        [pos4, pos3],\n        [pos3, pos1],\n    ];\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lines.forEach(line => {\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart, 1);\n        const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart, 1);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart, 1);\n        const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart, 1);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import MoveableManager from \"../../MoveableManager\";\nimport { BoundInfo, SnappableProps, BoundType, RotatableProps } from \"../../types\";\nimport { rotate, getRad, minus } from \"@moveable/matrix\";\nimport { getDistSize, throttle } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    moveable: MoveableManager<SnappableProps>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = moveable.props.bounds || {};\n    const bounds = { left, top, right, bottom };\n\n    return {\n        vertical: checkBound(bounds, verticalPoses, true),\n        horizontal: checkBound(bounds, horizontalPoses, false),\n    };\n}\n\nexport function checkBoundKeepRatio(\n    moveable: MoveableManager<SnappableProps>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = moveable.props.bounds || {};\n\n    const [endX, endY] = endPos;\n    const [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        } else if (isBottom && bottom <= endY) {\n            y = bottom;\n            x = (y - b) / a;\n            isBound = true;\n        } else if (!isBottom &&  endY <= top) {\n            y = top;\n            x = (y - b) / a;\n            isBound = true;\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBound(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n\n    if (startBoundPos + 1 > minPos) {\n        return {\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        };\n    }\n    if (endBoundPos - 1 < maxPos) {\n        return {\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        };\n    }\n\n    return {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManager<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.bounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index], i) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import MoveableManager from \"../MoveableManager\";\nimport {\n    Renderer,\n    SnappableProps,\n    SnappableState, Guideline,\n    SnapInfo, BoundInfo,\n    ScalableProps, SnapPosInfo, RotatableProps,\n    RectInfo, DraggableProps, SnapOffsetInfo, GapGuideline,\n} from \"../types\";\nimport {\n    prefix, caculatePoses, getRect,\n    getAbsolutePosesByState, getAbsolutePoses, throttle, roundSign,\n    getDistSize, groupBy, flat, maxOffset, minOffset, triggerEvent,\n} from \"../utils\";\nimport { IObject, find } from \"@daybrush/utils\";\nimport {\n    getPosByReverseDirection,\n    getDragDist, scaleMatrix, getPosByDirection,\n} from \"../DraggerUtils\";\nimport { minus, rotate, plus } from \"@moveable/matrix\";\nimport {\n    dragControlCondition as rotatableDragControlCondtion,\n} from \"./Rotatable\";\nimport { TINY_NUM } from \"../consts\";\nimport { directionCondition } from \"./utils\";\nimport {\n    getInnerBoundInfo, getCheckSnapLines,\n    getInnerBoundDragInfo, checkRotateInnerBounds, checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport { checkBoundPoses, checkRotateBounds, checkBoundKeepRatio } from \"./snappable/bounds\";\nimport {\n    checkSnaps, getSnapInfosByDirection,\n    checkSnapPoses, getNearestSnapGuidelineInfo,\n    getNearOffsetInfo,\n    checkSnapKeepRatio,\n} from \"./snappable/snap\";\n\nexport function snapStart(moveable: MoveableManager<SnappableProps, SnappableState>) {\n    const state = moveable.state;\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n\n    const {\n        horizontalGuidelines = [],\n        verticalGuidelines = [],\n        elementGuidelines = [],\n        bounds,\n        snapCenter,\n    } = moveable.props;\n\n    if (!bounds && !horizontalGuidelines.length && !verticalGuidelines.length && !elementGuidelines.length) {\n        return;\n    }\n\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n    } = state;\n\n    const containerLeft = containerClientRect.left + containerClientRect.clientLeft!;\n    const containerTop = containerClientRect.top + containerClientRect.clientTop!;\n\n    const poses = getAbsolutePosesByState(state);\n    const targetLeft = Math.min(...poses.map(pos => pos[0]));\n    const targetTop = Math.min(...poses.map(pos => pos[1]));\n    const distLeft = roundSign(targetLeft - (clientLeft - containerLeft));\n    const distTop = roundSign(targetTop - (clientTop - containerTop));\n    const guidelines: Guideline[] = [];\n\n    elementGuidelines!.forEach(el => {\n        const rect = el.getBoundingClientRect();\n        const { top, left, width, height } = rect;\n        const elementTop = top - containerTop;\n        const elementBottom = elementTop + height;\n        const elementLeft = left - containerLeft;\n        const elementRight = elementLeft + width;\n        const sizes = [width, height];\n        guidelines.push({\n            type: \"vertical\", element: el, pos: [\n                throttle(elementLeft + distLeft, 0.1),\n                elementTop,\n            ], size: height,\n            sizes,\n        });\n        guidelines.push({\n            type: \"vertical\", element: el, pos: [\n                throttle(elementRight + distLeft, 0.1),\n                elementTop,\n            ], size: height,\n            sizes,\n        });\n        guidelines.push({\n            type: \"horizontal\", element: el, pos: [\n                elementLeft,\n                throttle(elementTop + distTop, 0.1),\n            ], size: width,\n            sizes,\n        });\n        guidelines.push({\n            type: \"horizontal\", element: el, pos: [\n                elementLeft,\n                throttle(elementBottom + distTop, 0.1),\n            ], size: width,\n            sizes,\n        });\n\n        if (snapCenter) {\n            guidelines.push({\n                type: \"vertical\",\n                element: el,\n                pos: [\n                    throttle((elementLeft + elementRight) / 2 + distLeft, 0.1),\n                    elementTop,\n                ],\n                size: height,\n                sizes,\n                center: true,\n            });\n            guidelines.push({\n                type: \"horizontal\",\n                element: el,\n                pos: [\n                    elementLeft,\n                    throttle((elementTop + elementBottom) / 2 + distTop, 0.1),\n                ],\n                size: width,\n                sizes,\n                center: true,\n            });\n        }\n    });\n\n    state.guidelines = guidelines;\n    state.enableSnap = true;\n}\n\nexport function hasGuidelines(\n    moveable: MoveableManager<any, any>,\n    ableName: string,\n): moveable is MoveableManager<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n        },\n        state: {\n            guidelines,\n            enableSnap,\n        },\n    } = moveable;\n\n    if (\n        !snappable\n        || !enableSnap\n        || (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        bounds\n        || (guidelines && guidelines.length)\n        || (verticalGuidelines && verticalGuidelines.length)\n        || (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>,\n) {\n    const sizeOffset = solveEquation(\n        pos1,\n        pos2,\n        -offset,\n        isVertical,\n    );\n\n    if (!sizeOffset) {\n        return [0, 0];\n    }\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return [widthOffset, heightOffset];\n}\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedPos: number[],\n    direction: number[],\n    is3d: boolean,\n) {\n    const nextPoses = caculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextPos = getPosByReverseDirection(nextPoses, direction);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextPos));\n}\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(\n        moveable,\n        startPos,\n        endPos,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapKeepRatio(\n        moveable,\n        startPos,\n        endPos,\n    );\n\n    const horizontalOffset = getSnapBoundOffset(horizontalBoundInfo, horizontalSnapInfo);\n    const verticalOffset = getSnapBoundOffset(verticalBoundInfo, verticalSnapInfo);\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkSnapBounds(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    boundPoses: number[][] = poses,\n) {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundPoses(\n        moveable,\n        boundPoses.map(pos => pos[0]),\n        boundPoses.map(pos => pos[1]),\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(\n        moveable,\n        poses.map(pos => pos[0]),\n        poses.map(pos => pos[1]),\n    );\n\n    const horizontalOffset = getSnapBound(horizontalBoundInfo, horizontalSnapInfo);\n    const verticalOffset = getSnapBound(verticalBoundInfo, verticalSnapInfo);\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkMaxBounds(\n    moveable: MoveableManager<SnappableProps>,\n    width: number,\n    height: number,\n    poses: number[][],\n    direction: number[],\n    fixedPos: number[],\n    datas: any,\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach(otherDirection => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n\n            if (isCheckHorizontal) {\n                const [\n                    ,\n                    heightOffset,\n                ] = solveNextOffset(\n                    fixedPos, otherPos,\n                    (fixedPos[1] < otherPos[1] ? bottom : top) - otherPos[1],\n                    false, datas,\n                );\n\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + heightOffset;\n                }\n            }\n            if (isCheckVertical) {\n                const [\n                    widthOffset,\n                ] = solveNextOffset(\n                    fixedPos, otherPos,\n                    (fixedPos[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true, datas,\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + widthOffset;\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\nfunction getSnapBoundInfo(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    datas: any,\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n\n        const snapBoundInfo\n            = keepRatio\n            ? checkSnapBoundsKeepRatio(moveable, otherStartPos, otherEndPos)\n            : checkSnapBounds(moveable, [otherEndPos]);\n\n        const {\n            horizontal: {\n                dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const isVertical = otherHorizontalDist < otherVerticalDist;\n        const sizeOffset = solveNextOffset(\n            otherStartPos,\n            otherEndPos,\n            isVertical ? otherVerticalOffset : otherHorizontalOffset,\n            isVertical,\n            datas,\n        ).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\nexport function getCheckSnapDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const directions: number[][][] = [];\n    const fixedDirection = [-direction[0], -direction[1]];\n\n    if (direction[0] && direction[1]) {\n        directions.push(\n            [fixedDirection, [direction[0], -direction[1]]],\n            [fixedDirection, [-direction[0], direction[1]]],\n        );\n        if (keepRatio) {\n            // pass two direction condition\n            directions.push(\n                [fixedDirection, direction],\n            );\n        }\n    } else if (direction[0]) {\n        // vertcal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [fixedDirection[0], -1]],\n                [fixedDirection, [fixedDirection[0], 1]],\n                [fixedDirection, [direction[0], -1]],\n                [fixedDirection, direction],\n                [fixedDirection, [direction[0], 1]],\n            );\n        } else {\n            directions.push(\n                [[fixedDirection[0], -1], [direction[0], -1]],\n                [[fixedDirection[0], 0], [direction[0], 0]],\n                [[fixedDirection[0], 1], [direction[0], 1]],\n            );\n        }\n    } else if (direction[1]) {\n        // horizontal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [-1, fixedDirection[1]]],\n                [fixedDirection, [1, fixedDirection[1]]],\n                [fixedDirection, [-1, direction[1]]],\n                [fixedDirection, [1, direction[1]]],\n                [fixedDirection, direction],\n            );\n        } else {\n            directions.push(\n                [[-1, fixedDirection[1]], [-1, direction[1]]],\n                [[0, fixedDirection[1]], [0, direction[1]]],\n                [[1, fixedDirection[1]], [1, direction[1]]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        directions.push(\n            [fixedDirection, [1, 0]],\n            [fixedDirection, [-1, 0]],\n            [fixedDirection, [0, -1]],\n            [fixedDirection, [0, 1]],\n\n            [[1, 0], [1, -1]],\n            [[1, 0], [1, 1]],\n            [[0, 1], [1, 1]],\n            [[0, 1], [-1, 1]],\n\n            [[-1, 0], [-1, -1]],\n            [[-1, 0], [-1, 1]],\n            [[0, -1], [1, -1]],\n            [[0, -1], [-1, -1]],\n        );\n    }\n\n    return directions;\n}\nexport function getSizeOffsetInfo(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    datas: any,\n) {\n    const directions = getCheckSnapDirections(direction, keepRatio);\n    const lines = getCheckSnapLines(poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(moveable, poses, directions, keepRatio, datas),\n        ...getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    datas: any,\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: {\n            offset: horizontalOffset,\n        },\n        vertical: {\n            offset: verticalOffset,\n        },\n    } = checkSnapBounds(moveable, [snapPos]);\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n\n        const nextWidth\n            = Math.min(maxWidth || Infinity, width + direction[0] * nextWidthOffset);\n        const nextHeight\n            = Math.min(maxHeight || Infinity, height + direction[1] * nextHeightOffset);\n\n        return [\n            nextWidth - width,\n            nextHeight - height,\n        ];\n    }\n    return [\n        0,\n        0,\n    ];\n}\nexport function checkSizeDist(\n    moveable: MoveableManager<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            datas,\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist = Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist = Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset\n                = isWidthBound && isHeightBound ? widthDist < heightDist\n                    : isHeightBound || (!isWidthBound && widthDist < heightDist);\n\n            // height * widthOffset = width * heighOffset\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = width * nextHeightOffset / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = height * nextWidthOffset / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const {\n            maxWidth,\n            maxHeight,\n        } = checkMaxBounds(moveable, width, height, poses, direction, fixedPos, datas);\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            datas,\n        );\n\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [\n        widthOffset,\n        heightOffset,\n    ];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManager<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number,\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    const rad = rotation * Math.PI / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map(pos => minus(pos, origin));\n    const nextPoses = prevPoses.map(pos => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapSize(\n    moveable: MoveableManager<any, any>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const {\n        matrix,\n        is3d,\n    } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                matrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedPos,\n                direction,\n                is3d,\n            );\n        }, width, height, direction, fixedPos, isRequest, datas,\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManager<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    const {\n        width,\n        height,\n    } = datas;\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const is3d = datas.is3d;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(datas, plus(scale, [widthOffset / width, heightOffset / height])),\n                width,\n                height,\n                fixedPos,\n                direction,\n                is3d,\n            );\n        },\n        width, height,\n        direction,\n        fixedPos,\n        isRequest,\n        datas,\n    );\n\n    return [\n        sizeDist[0] / width,\n        sizeDist[1] / height,\n    ];\n}\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean,\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManager<any, any>,\n    datas: any,\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[],\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n                [verticalOffset, 0],\n            );\n        } else if (isVerticalBound) {\n            adjustPoses.push(\n                [verticalOffset, 0],\n            );\n        } else if (isHorizontalBound) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n            );\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n                [verticalOffset, 0],\n            );\n        } else if (isVerticalSnap) {\n            adjustPoses.push(\n                [verticalOffset, 0],\n            );\n        } else if (isHorizontalSnap) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n            );\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return getDistSize(minus([distX, distY], a)) - getDistSize(minus([distX, distY], b));\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY = distY * Math.abs(distX + offsetX) / Math.abs(distX) - distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX = distX * Math.abs(distY + offsetY) / Math.abs(prevDistY) - distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (Math.abs(offsetX) > TINY_NUM && Math.abs(offsetX) < Math.abs(verticalOffset)) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (Math.abs(offsetY) > TINY_NUM && Math.abs(offsetY) < Math.abs(horizontalOffset)) {\n                    const scale = Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = (distX || isVerticalBound) ? -verticalOffset : 0;\n        offsetY = (distY || isHorizontalBound) ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\nexport function checkSnapDrag(\n    moveable: MoveableManager<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    datas: any,\n) {\n\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(\n        datas.absolutePoses,\n        [distX, distY],\n    );\n    const { left, right, top, bottom } = getRect(poses);\n    const snapCenter = moveable.props.snapCenter;\n    const snapPoses = [\n        [left, top],\n        [right, top],\n        [left, bottom],\n        [right, bottom],\n    ];\n\n    if (snapCenter) {\n        snapPoses.push([(left + right) / 2, (top + bottom) / 2]);\n    }\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkSnapBounds(moveable, snapPoses, poses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound\n        = verticalSnapBoundInfo.isBound\n        || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound\n        = horizontalSnapBoundInfo.isBound\n        || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(verticalSnapBoundInfo.offset, verticalInnerBoundInfo.offset);\n    const horizontalOffset = maxOffset(horizontalSnapBoundInfo.offset, horizontalInnerBoundInfo.offset);\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset],\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: Guideline[] = [];\n\n    posInfos.forEach(posInfo => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction getElementGuidelineDist(\n    elementPos: number,\n    elementSize: number,\n    targetPos: number,\n    targetSize: number,\n) {\n    // relativePos < 0  => element(l)  ---  (r)target\n    // relativePos > 0  => target(l)   ---  (r)element\n    const relativePos = elementPos - targetPos;\n    const startPos = relativePos < 0 ? relativePos + elementSize : targetSize;\n    const endPos = relativePos < 0 ? 0 : relativePos;\n    const size = endPos - startPos;\n\n    return {\n        size,\n        pos: startPos,\n    };\n}\nfunction groupByElementGuidelines(\n    guidelines: Guideline[],\n    clientPos: number,\n    size: number,\n    index: number,\n) {\n    const groupInfos: Array<[Element, number, any]> = [];\n\n    const group = groupBy(guidelines.filter(({ element, gap }) => element && !gap), ({ element, pos }) => {\n        const elementPos = pos[index];\n        const sign = Math.min(0, elementPos - clientPos) < 0 ? -1 : 1;\n        const groupKey = `${sign}_${pos[index ? 0 : 1]}`;\n        const groupInfo = find(groupInfos, ([groupElement, groupPos]) => {\n            return element === groupElement && elementPos === groupPos;\n        });\n        if (groupInfo) {\n            return groupInfo[2];\n        }\n        groupInfos.push([element!, elementPos, groupKey]);\n        return groupKey;\n    });\n    group.forEach(elementGuidelines => {\n        elementGuidelines.sort((a, b) => {\n            const result = getElementGuidelineDist(a.pos[index], a.size, clientPos, size).size\n                - getElementGuidelineDist(b.pos[index], a.size, clientPos, size).size;\n\n            return result || a.pos[index ? 0 : 1] - b.pos[index ? 0 : 1];\n        });\n    });\n    return group;\n}\nfunction renderElementGroup(\n    group: Guideline[][],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    minPos: number,\n    clientPos: number,\n    clientSize: number,\n    targetPos: number,\n    snapThreshold: number,\n    isDisplaySnapDigit: boolean,\n    snapDigit: number,\n    index: number,\n    React: Renderer,\n) {\n    return flat(group.map((elementGuidelines, i) => {\n        let isFirstRenderSize = true;\n\n        return elementGuidelines.map(({ pos, size }, j) => {\n            const {\n                pos: linePos,\n                size: lineSize,\n            } = getElementGuidelineDist(pos[index], size, clientPos, clientSize);\n\n            if (lineSize < snapThreshold) {\n                return null;\n            }\n            const isRenderSize = isFirstRenderSize;\n\n            isFirstRenderSize = false;\n            const snapSize = isDisplaySnapDigit && isRenderSize ? parseFloat(lineSize.toFixed(snapDigit)) : 0;\n\n            return <div className={prefix(\n                \"line\",\n                directionName,\n                \"guideline\",\n                \"dashed\",\n            )}\n                data-size={snapSize > 0 ? snapSize : \"\"}\n                key={`${directionName}LinkGuidline${i}-${j}`} style={{\n                    [posName1]: `${minPos + linePos}px`,\n                    [posName2]: `${-targetPos + pos[index ? 0 : 1]}px`,\n                    [sizeName]: `${lineSize}px`,\n                }} />;\n        });\n    }));\n}\nfunction renderSnapPoses(\n    snapPoses: number[],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    React: Renderer,\n) {\n    return snapPoses.map((pos, i) => {\n        return <div className={prefix(\n            \"line\",\n            directionName,\n            \"guideline\",\n            \"target\",\n            \"bold\",\n        )} key={`${directionName}TargetGuidline${i}`} style={{\n            [posName1]: `${minPos}px`,\n            [posName2]: `${-targetPos + pos}px`,\n            [sizeName]: `${size}px`,\n        }} />;\n    });\n}\nfunction renderGuidelines(\n    guidelines: Guideline[],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    targetPos1: number,\n    targetPos2: number,\n    index: number,\n    React: Renderer,\n) {\n    return guidelines.map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        return <div className={prefix(\n            \"line\",\n            directionName,\n            \"guideline\",\n            element ? \"bold\" : \"\",\n        )} key={`${directionName}Guidline${i}`} style={{\n            [posName1]: `${-targetPos1 + pos[index]}px`,\n            [posName2]: `${-targetPos2 + pos[index ? 0 : 1]}px`,\n            [sizeName]: `${size}px`,\n        }} />;\n    });\n}\n\nfunction getGapGuidelinesToStart(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number,\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap > 0 ? targetSizes[0] : 0);\n\n    return guidelines.filter(({ pos: gapPos }) => gapPos[index] <= targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) =>  bPos[index] - aPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (throttle(nextPos + gapSizes![index], 0.0001) === throttle(start - absGap, 0.0001)) {\n                start = nextPos;\n                return true;\n            }\n            return false;\n        }).map(gapGuideline => {\n            const renderPos = -targetPos[index] + gapGuideline.pos[index] + gapGuideline.sizes![index];\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index ? [otherPos, renderPos] : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelinesToEnd(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number,\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap < 0 ? targetSizes[index] : 0);\n\n    return guidelines.filter(({ pos: gapPos }) => gapPos[index] > targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => aPos[index] - bPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (throttle(nextPos, 0.0001) === throttle(start + absGap, 0.0001)) {\n                start = nextPos + gapSizes![index];\n                return true;\n            }\n            return false;\n        }).map(gapGuideline => {\n            const renderPos = -targetPos[index] + gapGuideline.pos[index] - absGap;\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index ? [otherPos, renderPos] : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    targetPos: number[],\n    targetSizes: number[],\n): GapGuideline[] {\n    const elementGuidelines = guidelines.filter(\n        ({ element, gap, type: guidelineType }) => element && gap && guidelineType === type);\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return flat(elementGuidelines.map((guideline, i) => {\n        const pos = guideline.pos;\n        const gap = guideline.gap!;\n        const gapGuidelines = guideline.gapGuidelines!;\n        const sizes = guideline.sizes!;\n\n        let offset = minOffset(\n            pos[otherIndex] + sizes[otherIndex] - targetPos[otherIndex],\n            pos[otherIndex] - targetPos[otherIndex] - targetSizes[otherIndex],\n        );\n        const minSize =  Math.min(sizes[otherIndex], targetSizes[otherIndex]);\n\n        if (offset > 0 && offset > minSize) {\n            offset = (offset - minSize / 2) * 2;\n        } else if (offset < 0 && offset < -minSize) {\n            offset = (offset + minSize / 2) * 2;\n        }\n\n        const otherPos = (offset > 0 ? 0 : targetSizes[otherIndex]) +  offset / 2;\n        return [\n            ...getGapGuidelinesToStart(gapGuidelines, index, targetPos, targetSizes, pos, gap, otherPos),\n            ...getGapGuidelinesToEnd(gapGuidelines, index, targetPos, targetSizes, pos, gap, otherPos),\n        ];\n    }));\n}\nfunction renderGapGuidelines(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    gapGuidelines: GapGuideline[],\n    type: \"vertical\" | \"horizontal\",\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    React: any,\n) {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n    } = moveable.props;\n\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return gapGuidelines.map(({ renderPos, gap }, i) => {\n        const absGap = Math.abs(gap!);\n        const snapSize = isDisplaySnapDigit ? parseFloat(absGap.toFixed(snapDigit)) : 0;\n\n        return <div className={prefix(\n                \"line\",\n                directionName,\n                \"guideline\",\n                \"gap\",\n            )}\n            data-size={snapSize > 0 ? snapSize : \"\"}\n            key={`${otherType}GapGuideline${i}`} style={{\n                [posName1]: `${renderPos[index]}px`,\n                [posName2]: `${renderPos[otherIndex]}px`,\n                [sizeName]: `${absGap}px`,\n            }} />;\n    });\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: number[],\n    horizontalSnapPoses: number[],\n) {\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            pos: verticalBoundPos,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            pos: horizontalBoundPos,\n        },\n    } = checkBoundPoses(moveable, verticalPoses, horizontalPoses);\n\n    if (isVerticalBound && verticalSnapPoses.indexOf(verticalBoundPos) < 0) {\n        verticalSnapPoses.push(verticalBoundPos);\n    }\n    if (isHorizontalBound && horizontalSnapPoses.indexOf(horizontalBoundPos) < 0) {\n        horizontalSnapPoses.push(horizontalBoundPos);\n    }\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalSnapPoses.push(\n        ...verticalInnerBoundPoses.filter(pos => verticalSnapPoses.indexOf(pos) < 0),\n    );\n    horizontalSnapPoses.push(\n        ...horizontalInnerBoundPoses.filter(pos => horizontalSnapPoses.indexOf(pos) < 0),\n    );\n}\nexport default {\n    name: \"snappable\",\n    props: {\n        snappable: [Boolean, Array],\n        snapCenter: Boolean,\n        snapHorizontal: Boolean,\n        snapVertical: Boolean,\n        snapElement: Boolean,\n        snapGap: Boolean,\n        isDisplaySnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n        bounds: Object,\n        innerBounds: Object,\n    } as const,\n    render(moveable: MoveableManager<SnappableProps, SnappableState>, React: Renderer): any[] {\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1, pos2, pos3, pos4,\n            snapRenderInfo,\n            targetClientRect,\n            containerClientRect,\n        } = moveable.state;\n        const clientLeft = targetClientRect.left - containerClientRect.left - containerClientRect.clientLeft!;\n        const clientTop = targetClientRect.top - containerClientRect.top - containerClientRect.clientTop!;\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        const {\n            snapThreshold = 5,\n            snapDigit = 0,\n            isDisplaySnapDigit = true,\n        } = moveable.props;\n        const poses = getAbsolutePosesByState(moveable.state);\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const verticalSnapPoses: number[] = [];\n        const horizontalSnapPoses: number[] = [];\n        const verticalGuidelines: Guideline[] = [];\n        const horizontalGuidelines: Guideline[] = [];\n        const snapInfos: Array<{ vertical: SnapInfo, horizontal: SnapInfo }> = [];\n\n        if (snapRenderInfo.direction) {\n            snapInfos.push(getSnapInfosByDirection(moveable, poses, snapRenderInfo.direction));\n        }\n        if (snapRenderInfo.snap) {\n            const rect = getRect(poses);\n\n            if (snapRenderInfo.center) {\n                (rect as any).middle = (rect.top + rect.bottom) / 2;\n                (rect as any).center = (rect.left + rect.right) / 2;\n            }\n            snapInfos.push(checkSnaps(moveable, rect, true, 1));\n        }\n        snapInfos.forEach(snapInfo => {\n            const {\n                vertical: {\n                    posInfos: verticalPosInfos,\n                },\n                horizontal: {\n                    posInfos: horizontalPosInfos,\n                },\n            } = snapInfo;\n            verticalSnapPoses.push(...verticalPosInfos.map(posInfo => posInfo.pos));\n            horizontalSnapPoses.push(...horizontalPosInfos.map(posInfo => posInfo.pos));\n            verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n            horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n        });\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses,\n        );\n        const elementHorizontalGroup = groupByElementGuidelines(\n            horizontalGuidelines,\n            clientLeft,\n            width,\n            0,\n        );\n        const elementVerticalGroup = groupByElementGuidelines(\n            verticalGuidelines,\n            clientTop,\n            height,\n            1,\n        );\n        const horizontalNames = [\"horizontal\", \"left\", \"top\", \"width\"] as const;\n        const verticalNames = [\"vertical\", \"top\", \"left\", \"height\"] as const;\n\n        const gapVerticalGuidelines = getGapGuidelines(\n            verticalGuidelines, \"vertical\",\n            [targetLeft, targetTop],\n            [width, height],\n        );\n        const gapHorizontalGuidelines = getGapGuidelines(\n            horizontalGuidelines, \"horizontal\",\n            [targetLeft, targetTop],\n            [width, height],\n        );\n\n        const allGuidelines = [\n            ...verticalGuidelines,\n            ...horizontalGuidelines,\n        ];\n        triggerEvent(moveable, \"onSnap\", {\n            guidelines: allGuidelines.filter(({ element }) => !element),\n            elements: groupBy(allGuidelines.filter(({ element }) => element), ({ element }) => element),\n            gaps: [\n                ...gapVerticalGuidelines,\n                ...gapHorizontalGuidelines,\n            ],\n        }, true);\n\n        return [\n            ...renderGapGuidelines(\n                moveable,\n                gapVerticalGuidelines,\n                \"vertical\",\n                horizontalNames,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapHorizontalGuidelines,\n                \"horizontal\",\n                verticalNames,\n                React,\n            ),\n            ...renderElementGroup(\n                elementHorizontalGroup,\n                horizontalNames,\n                minLeft,\n                clientLeft,\n                width,\n                targetTop,\n                snapThreshold,\n                isDisplaySnapDigit,\n                snapDigit,\n                0,\n                React,\n            ),\n            ...renderElementGroup(\n                elementVerticalGroup,\n                verticalNames,\n                minTop,\n                clientTop,\n                height,\n                targetLeft,\n                snapThreshold,\n                isDisplaySnapDigit,\n                snapDigit,\n                1,\n                React,\n            ),\n            ...renderSnapPoses(\n                horizontalSnapPoses,\n                horizontalNames,\n                minLeft,\n                targetTop,\n                width,\n                React,\n            ),\n            ...renderSnapPoses(\n                verticalSnapPoses,\n                verticalNames,\n                minTop,\n                targetLeft,\n                height,\n                React,\n            ),\n            ...renderGuidelines(\n                horizontalGuidelines,\n                horizontalNames,\n                targetLeft,\n                targetTop,\n                0,\n                React,\n            ),\n            ...renderGuidelines(\n                verticalGuidelines,\n                verticalNames,\n                targetTop,\n                targetLeft,\n                1,\n                React,\n            ),\n        ];\n    },\n    dragStart(moveable: MoveableManager<SnappableProps, SnappableState>, e: any) {\n        moveable.state.snapRenderInfo = {\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    pinchStart(moveable: MoveableManager<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragEnd(moveable: MoveableManager<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragControlCondition(e: any) {\n        return directionCondition(e) || rotatableDragControlCondtion(e);\n    },\n    dragControlStart(moveable: MoveableManager<SnappableProps, SnappableState>, e: any) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControlEnd(moveable: MoveableManager<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroupEnd(moveable: any) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(moveable: any, e: any) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControlEnd(moveable: any) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n    },\n};\n","import { getDragDist, setDragStart } from \"../DraggerUtils\";\nimport { throttleArray, triggerEvent, fillParams, throttle, getDistSize, prefix } from \"../utils\";\nimport { minus, plus, getRad } from \"@moveable/matrix\";\nimport MoveableManager from \"../MoveableManager\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState, Renderer,\n} from \"../types\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { triggerChildDragger } from \"../groupUtils\";\nimport { checkSnapDrag, startCheckSnapDrag } from \"./Snappable\";\nimport { IObject } from \"@daybrush/utils\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n    },\n    render(\n        moveable: MoveableManager<DraggableProps, DraggableState>,\n        React: Renderer,\n    ) {\n        const throttleDragRotate = moveable.props.throttleDragRotate;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return;\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return;\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return <div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad)`,\n        }} />;\n    },\n    dragStart(\n        moveable: MoveableManager<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentDragger } = e;\n        const state = moveable.state;\n        const {\n            targetTransform,\n            target,\n            dragger,\n        } = state;\n\n        if (dragger) {\n            return false;\n        }\n        state.dragger = parentDragger || moveable.targetDragger;\n        const style = window.getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.transform = targetTransform;\n        datas.startTranslate = [0, 0];\n\n        setDragStart(moveable, { datas });\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n\n        startCheckSnapDrag(moveable, datas);\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startTranslate = translate;\n            },\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.dragger = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManager<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        const { datas, parentEvent, parentFlag, isPinch } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, transform, startTranslate } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (throttleDragRotate > 0 && (distX || distY)) {\n            const deg = throttle(getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate);\n            const r = getDistSize([distX, distY]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapDrag(\n                moveable, distX, distY, throttleDragRotate, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n        datas.passDeltaX = distX - (datas.passDistX || 0);\n        datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDistX = distX;\n        datas.passDistY = distY;\n        const beforeTranslate = plus(getDragDist({ datas, distX, distY }, true), startTranslate);\n        const translate = plus(getDragDist({ datas, distX, distY }, false), startTranslate);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startTranslate);\n        const dist = minus(translate, startTranslate);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = `${transform} translate(${dist[0]}px, ${dist[1]}px)`;\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragEnd(\n        moveable: MoveableManager<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas, isDrag } = e;\n\n        moveable.state.dragger = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", fillParams<OnDragEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n    dragGroupStart(moveable: MoveableGroup, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildDragger(moveable, this, \"dragStart\", [clientX, clientY], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDeltaX, passDeltaY } = e.datas;\n\n        const events = triggerChildDragger(moveable, this, \"drag\", [passDeltaX, passDeltaY], e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n\n        datas.childDraggers.forEach(() => {\n\n        })\n        triggerChildDragger(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillParams(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10, isInstant: true });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100, isInstant: true });\n     * moveable.request(\"draggable\", { x: 220, y: 100, isInstant: true });\n     * moveable.request(\"draggable\", { x: 240, y: 100, isInstant: true });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManager<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart(e: IObject<any>) {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n","import { throttle, prefix, triggerEvent, fillParams, getRotationRad, getClientRect, caculatePosition } from \"../utils\";\nimport { IObject, hasClass } from \"@daybrush/utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps, SnappableState,\n} from \"../types\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { triggerChildAble } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, getRad, rotate as rotateMatrix } from \"@moveable/matrix\";\nimport CustomDragger, { setCustomDrag } from \"../CustomDragger\";\nimport { checkSnapRotate } from \"./Snappable\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManager<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = caculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.prevSnapDeg = datas.prevDeg;\n    datas.startDeg = datas.prevDeg;\n    datas.loop = 0;\n}\nfunction getParentDeg(\n    moveable: MoveableManager<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    parentDist: number,\n    direction: number,\n    startRotate: number,\n) {\n    const {\n        prevDeg,\n    } = datas;\n\n    const absoluteDeg = startRotate + parentDist;\n    const dist = checkSnapRotate(\n        moveable,\n        moveableRect,\n        datas.origin,\n        parentDist,\n    );\n    datas.prevDeg = dist;\n\n    const delta = direction * (dist - prevDeg);\n\n    return [delta, dist, absoluteDeg];\n}\nfunction getDeg(\n    moveable: MoveableManager<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    deg: number,\n    direction: number,\n    startRotate: number,\n    throttleRotate: number,\n    isSnap?: boolean,\n) {\n    const {\n        prevDeg,\n        prevSnapDeg,\n        startDeg,\n        loop: prevLoop,\n    } = datas;\n\n    if (prevDeg > deg && prevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevDeg < deg && prevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n    const loop = datas.loop;\n    const absolutePrevSnapDeg = prevLoop * 360 + prevSnapDeg - startDeg + startRotate;\n    let absoluteDeg = loop * 360 + deg - startDeg + startRotate;\n\n    datas.prevDeg = absoluteDeg - loop * 360 + startDeg - startRotate;\n\n    absoluteDeg = throttle(absoluteDeg, throttleRotate);\n    let dist = direction * (absoluteDeg - startRotate);\n    if (isSnap) {\n        dist = checkSnapRotate(moveable, moveableRect, datas.origin, dist);\n        absoluteDeg = dist / direction + startRotate;\n    }\n    datas.prevSnapDeg = absoluteDeg - loop * 360 + startDeg - startRotate;\n\n    const delta = direction * (absoluteDeg - absolutePrevSnapDeg);\n\n    return [delta, dist, absoluteDeg];\n}\nfunction getRotateInfo(\n    moveable: MoveableManager<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    direction: number,\n    clientX: number, clientY: number,\n    startRotate: number,\n    throttleRotate: number,\n) {\n    return getDeg(\n        moveable,\n        moveableRect,\n        datas,\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        startRotate,\n        throttleRotate,\n        true,\n    );\n}\n\nexport function getPositions(\n    rotationPosition: \"top\" | \"bottom\" | \"left\" | \"right\",\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n) {\n    if (rotationPosition === \"left\") {\n        return [pos3, pos1];\n    } else if (rotationPosition === \"right\") {\n        return [pos2, pos4];\n    } else if (rotationPosition === \"bottom\") {\n        return [pos4, pos3];\n    }\n    return [pos1, pos2];\n}\n\nexport function dragControlCondition(e: any) {\n    if (e.isRequest) {\n        return true;\n    }\n    return hasClass(e.inputEvent.target, prefix(\"rotation\"));\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n    },\n    render(moveable: MoveableManager<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n        } = moveable.props;\n        if (!rotatable) {\n            return null;\n        }\n        const { pos1, pos2, pos3, pos4, direction } = moveable.state;\n        const poses = getPositions(rotationPosition!, pos1, pos2, pos3, pos4);\n        const rotationRad = getRotationRad(poses, direction);\n\n        return (\n            <div key=\"rotation\" className={prefix(\"line rotation-line\")} style={{\n                // tslint:disable-next-line: max-line-length\n                transform: `translate(-50%) translate(${(poses[0][0] + poses[1][0]) / 2}px, ${(poses[0][1] + poses[1][1]) / 2}px) rotate(${rotationRad}rad)`,\n            }}>\n                <div className={prefix(\"control\", \"rotation\")}></div>\n            </div>\n        );\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManager<RotatableProps & SnappableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n            datas.afterInfo = {\n                origin: rect.origin,\n                prevDeg: externalRotate, startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n\n            const controlRect = getClientRect(moveable.controlBox.getElement());\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, controlRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, controlRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startRotate = 0;\n        datas.datas = {};\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startRotate = rotatation;\n            },\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {};\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManager<RotatableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch } = e;\n        const {\n            direction,\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            isRotate,\n            startRotate,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n        const {\n            throttleRotate = 0,\n            parentMoveable,\n        } = moveable.props;\n\n        let delta: number;\n        let dist: number;\n        let rotate: number;\n        let beforeDelta: number;\n        let beforeDist: number;\n        let beforeRotate: number;\n\n        if (\"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            [delta, dist, rotate]\n                = getParentDeg(moveable, rect, afterInfo, parentDist, direction, startRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getParentDeg(moveable, rect, beforeInfo, parentDist, direction, startRotate);\n        } else if (isPinch || parentFlag) {\n            [delta, dist, rotate]\n                = getDeg(moveable, rect, afterInfo, parentRotate, direction, startRotate, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getDeg(moveable, rect, beforeInfo, parentRotate, direction, startRotate, throttleRotate);\n        } else {\n            [delta, dist, rotate]\n                = getRotateInfo(moveable, rect, afterInfo, direction, clientX, clientY, startRotate, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate] = getRotateInfo(\n                moveable, rect, beforeInfo, beforeDirection, clientX, clientY, startRotate, throttleRotate,\n            );\n        }\n\n        if (!delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate,\n            beforeDist,\n            beforeDelta,\n            beforeRotate,\n            transform: `${datas.transform} rotate(${dist}deg)`,\n            isPinch: !!isPinch,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManager<RotatableProps>, e: any) {\n        const { datas, isDrag } = e;\n\n        if (!datas.isRotate) {\n            return false;\n        }\n        datas.isRotate = false;\n\n        triggerEvent(moveable, \"onRotateEnd\", fillParams<OnRotateEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        const { datas, inputEvent } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(moveable.rotation);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            datas,\n            { ...e, parentRotate: 0 },\n            (child, childDatas, eventParams) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                childDatas.prevClient = childClient;\n                eventParams.dragStart = Draggable.dragStart(\n                    child,\n                    new CustomDragger().dragStart(childClient, inputEvent),\n                );\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroup, e: any) {\n        const { inputEvent, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            datas,\n            { ...e, parentRotate },\n            (child, childDatas, result, i) => {\n                const [prevX, prevY] = childDatas.prevClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                childDatas.prevClient = [clientX, clientY];\n\n                const dragResult = Draggable.drag(\n                    child,\n                    setCustomDrag(child.state, delta, inputEvent, !!e.isPinch, false),\n                );\n                result.drag = dragResult;\n            },\n        );\n        moveable.rotation = params.beforeRotate;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set: (rotation: number) => {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", datas, e);\n\n        const nextParams: OnRotateGroupEnd = fillParams(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distRotate = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                distRotate += e.deltaRotate;\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n","import MoveableManager from \"./MoveableManager\";\nimport { prefix, getControlTransform, throttle } from \"./utils\";\nimport { ResizableProps, ScalableProps, WarpableProps, Renderer } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS } from \"./consts\";\nimport { IObject } from \"@daybrush/utils\";\n\nexport function renderControls(\n    moveable: MoveableManager<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    defaultDirections: string[],\n    React: Renderer,\n): any[] {\n    const {\n        pos1, pos2, pos3, pos4,\n        rotation,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n    } = moveable.props;\n    const poses = [pos1, pos2, pos3, pos4];\n\n    const directionMap: IObject<boolean> = {};\n    directions.forEach(direction => {\n        directionMap[direction] = true;\n    });\n    return directions.map(direction => {\n        const indexes = DIRECTION_INDEXES[direction];\n\n        if (!indexes || !directionMap[direction]) {\n            return null;\n        }\n        const directionRotation = (throttle(rotation / Math.PI * 180, 15) + DIRECTION_ROTATIONS[direction]) % 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", direction)}\n                data-rotation={directionRotation} data-direction={direction} key={`direction-${direction}`}\n                style={getControlTransform(rotation, ...indexes.map(index => poses[index]))}></div>\n        );\n    });\n}\nexport function renderAllDirections(\n    moveable: MoveableManager<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n) {\n    return renderControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\", \"n\", \"w\", \"s\", \"e\"], React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManager<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n): any[] {\n    return renderControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    throttle, getDirection, triggerEvent,\n    fillParams, getKeepRatioHeight, getKeepRatioWidth, getCSSSize, getDistSize,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getDragDist,\n    getResizeDist,\n    getStartDirection,\n    getAbsoluteFixedPosition,\n} from \"../DraggerUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd,\n} from \"../types\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport {\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { getRad, caculate, createRotateMatrix, plus } from \"@moveable/matrix\";\nimport CustomDragger, { setCustomDrag } from \"../CustomDragger\";\nimport { checkSnapSize } from \"./Snappable\";\nimport {\n    directionCondition,\n} from \"./utils\";\nimport { IObject } from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    updateRect: true,\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        baseDirection: Array,\n        keepRatio: Boolean,\n    },\n    render(moveable: MoveableManager<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManager<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            parentDirection,\n            datas,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, { datas });\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        datas.transformOrigin = moveable.props.transformOrigin;\n        datas.startDirection = getStartDirection(moveable, direction);\n        datas.fixedPosition = getAbsoluteFixedPosition(moveable, datas.startDirection);\n        datas.fixedOriginalPosition = getAbsoluteFixedPosition(moveable, direction);\n\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomDragger().dragStart([0, 0], inputEvent),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManager<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            distX, distY,\n            parentFlag, isPinch,\n            parentDistance, parentScale, inputEvent,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n        } = e;\n\n        const {\n            direction,\n            isResize,\n            transformOrigin,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            startWidth,\n            startHeight,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n        const {\n            throttleResize = 0,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = moveable.props.keepRatio || parentKeepRatio;\n        const isWidth = sizeDirection[0] || !sizeDirection[1];\n        const ratio = isWidth ? startOffsetHeight / startOffsetWidth : startOffsetWidth / startOffsetHeight;\n        const startDirection = keepRatio || parentFlag ? direction : datas.startDirection;\n        let fixedPosition = dragClient;\n        let distWidth: number = 0;\n        let distHeight: number = 0;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsoluteFixedPosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = (keepRatio ? datas.fixedOriginalPosition : datas.fixedPosition);\n            }\n        }\n\n        if (parentDist) {\n            distWidth = parentDist[0];\n            distHeight = parentDist[1];\n        } else if (parentScale) {\n            distWidth = (parentScale[0] - 1) * startOffsetWidth;\n            distHeight = (parentScale[1] - 1) * startOffsetHeight;\n        } else if (isPinch) {\n            if (parentDistance) {\n                distWidth = parentDistance;\n                distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n\n            distWidth = sizeDirection[0] * dist[0];\n            distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const ratioRad = getRad([0, 0], [startOffsetWidth, startOffsetHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = getKeepRatioWidth(distHeight, isWidth, ratio);\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = getKeepRatioHeight(distWidth, isWidth, ratio);\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n        }\n        let nextWidth = sizeDirection[0] || keepRatio\n            ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n        let nextHeight = sizeDirection[1] || keepRatio\n            ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n        if (keepRatio && startOffsetWidth && startOffsetHeight) {\n            // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n            nextHeight = nextWidth * startOffsetHeight / startOffsetWidth;\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapSize(\n                moveable, nextWidth,\n                nextHeight, direction,\n                datas.fixedOriginalPosition,\n                parentDist,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nextWidth = throttle(nextWidth, throttleResize!);\n                } else {\n                    nextHeight = throttle(nextHeight, throttleResize!);\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nextWidth += snapDist[0];\n                nextHeight = getKeepRatioHeight(nextWidth, isWidth, ratio);\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nextHeight += snapDist[1];\n                nextWidth = getKeepRatioWidth(nextHeight, isWidth, ratio);\n            }\n        } else {\n            nextWidth += snapDist[0];\n            nextHeight += snapDist[1];\n            if (!snapDist[0]) {\n                nextWidth = throttle(nextWidth, throttleResize!);\n            }\n            if (!snapDist[1]) {\n                nextHeight = throttle(nextHeight, throttleResize!);\n            }\n        }\n        nextWidth = Math.round(nextWidth);\n        nextHeight = Math.round(nextHeight);\n\n        distWidth = nextWidth - startOffsetWidth;\n        distHeight = nextHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        if (!parentMoveable && delta.every(num => !num)) {\n            return;\n        }\n\n        const inverseDelta = getResizeDist(\n                moveable,\n                nextWidth, nextHeight,\n                startDirection, fixedPosition, transformOrigin);\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: nextWidth,\n            offsetHeight: nextHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(moveable.state, inverseDelta, inputEvent, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManager<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            this.dragControl(moveable, e);\n            return true;\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManager<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isResize) {\n            return false;\n        }\n        datas.isResize = false;\n\n        const params = fillParams<OnResizeEnd>(moveable, e, {\n            isDrag,\n        });\n        triggerEvent(moveable, \"onResizeEnd\", params);\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const direction = params.direction;\n        const startPos = getAbsoluteFixedPosition(moveable, direction);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            datas,\n            (child, childDatas) => {\n                const pos = getAbsoluteFixedPosition(child, direction);\n                const [originalX, originalY] = caculate(\n                    createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                    [pos[0] - startPos[0], pos[1] - startPos[1], 1],\n                    3,\n                );\n                childDatas.originalX = originalX;\n                childDatas.originalY = originalY;\n\n                return e;\n            },\n        );\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            offsetWidth, offsetHeight, dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            offsetWidth / (offsetWidth - dist[0]),\n            offsetHeight / (offsetHeight - dist[1]),\n        ];\n        const fixedPosition = getAbsoluteFixedPosition(moveable, datas.direction);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            datas,\n            (_, childDatas) => {\n                const [clientX, clientY] = caculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        childDatas.originalX * parentScale[0],\n                        childDatas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...e,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", datas, e);\n\n        const nextParams: OnResizeGroupEnd = fillParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to resize\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10, isInstant: true });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100, isInstant: true });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100, isInstant: true });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100, isInstant: true });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManager<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n","import {\n    throttle, getDirection, triggerEvent, multiply2,\n    fillParams, getKeepRatioHeight, getKeepRatioWidth, getDistSize,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, getDragDist,\n    getScaleDist,\n    getAbsoluteFixedPosition,\n} from \"../DraggerUtils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    OnDrag, SnappableState, GroupableProps, OnScaleStart, OnScale, OnScaleEnd,\n} from \"../types\";\nimport {\n    triggerChildAble,\n} from \"../groupUtils\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport Draggable from \"./Draggable\";\nimport { getRad, caculate, createRotateMatrix, plus } from \"@moveable/matrix\";\nimport CustomDragger, { setCustomDrag } from \"../CustomDragger\";\nimport { checkSnapScale } from \"./Snappable\";\nimport { isArray, IObject } from \"@daybrush/utils\";\nimport {\n    directionCondition,\n} from \"./utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    },\n    render(moveable: MoveableManager<Partial<ResizableProps & ScalableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManager<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, { datas });\n        }\n\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.width = width;\n        datas.height = height;\n        datas.startScale = [1, 1];\n        datas.fixedPosition = getAbsoluteFixedPosition(moveable, direction);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startScale = scale;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomDragger().dragStart([0, 0], inputEvent),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManager<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        const {\n            datas, distX, distY,\n            parentScale,\n            parentDistance,\n            parentKeepRatio,\n            parentFlag, isPinch, inputEvent,\n            dragClient,\n            parentDist,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            width,\n            height,\n            transform,\n            isScale,\n            startScale,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const {\n            throttleScale,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = moveable.props.keepRatio || parentKeepRatio;\n        const state = moveable.state;\n        const isWidth = sizeDirection[0] || !sizeDirection[1];\n        const startWidth = width * startScale[0];\n        const startHeight = height * startScale[1];\n        const ratio = isWidth ? startHeight / startWidth : startWidth / startHeight;\n        let scaleX: number = 1;\n        let scaleY: number = 1;\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsoluteFixedPosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentScale) {\n            scaleX = parentScale[0];\n            scaleY = parentScale[1];\n        } else if (isPinch) {\n            if (parentDistance) {\n                scaleX = (width + parentDistance) / width;\n                scaleY = (height + parentDistance * height / width) / height;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n            let distWidth = sizeDirection[0] * dist[0];\n            let distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && width && height) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const ratioRad = getRad([0, 0], [startWidth, startHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = getKeepRatioWidth(distHeight, isWidth, ratio);\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = getKeepRatioHeight(distWidth, isWidth, ratio);\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n            scaleX = (width + distWidth) / width;\n            scaleY = (height + distHeight) / height;\n        }\n\n        scaleX = sizeDirection[0] || keepRatio ? scaleX * startScale[0] : startScale[0];\n        scaleY = sizeDirection[1] || keepRatio ? scaleY * startScale[1] : startScale[1];\n\n        if (scaleX === 0) {\n            scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (scaleY === 0) {\n            scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n\n        const nowDist = [scaleX / startScale[0], scaleY / startScale[1]];\n        let scale = [scaleX, scaleY];\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction };\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                nowDist,\n                direction,\n                datas.fixedPosition,\n                parentDist,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nowDist[0] = throttle(nowDist[0] * startScale[0], throttleScale!) / startScale[0];\n                } else {\n                    nowDist[1] = throttle(nowDist[1] * startScale[1], throttleScale!) / startScale[1];\n                }\n            }\n\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nowDist[0] += snapDist[0];\n                const snapHeight = getKeepRatioHeight(width * nowDist[0] * startScale[0], isWidth, ratio);\n\n                nowDist[1] = snapHeight / height / startScale[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nowDist[1] += snapDist[1];\n                const snapWidth = getKeepRatioWidth(height * nowDist[1] * startScale[1], isWidth, ratio);\n\n                nowDist[0] = snapWidth / width / startScale[0];\n            }\n        } else {\n            nowDist[0] += snapDist[0];\n            nowDist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                nowDist[0] = throttle(nowDist[0] * startScale[0], throttleScale!) / startScale[0];\n            }\n            if (!snapDist[1]) {\n                nowDist[1] = throttle(nowDist[1] * startScale[1], throttleScale!) / startScale[1];\n            }\n        }\n        if (nowDist[0] === 0) {\n            nowDist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (nowDist[1] === 0) {\n            nowDist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [nowDist[0] / prevDist[0], nowDist[1] / prevDist[1]];\n        scale = multiply2(nowDist, startScale);\n\n        datas.prevDist = nowDist;\n\n        if (scaleX === prevDist[0] && scaleY === prevDist[1] && !parentMoveable) {\n            return false;\n        }\n        const inverseDelta = getScaleDist(moveable, delta, direction, fixedPosition);\n        const params = fillParams<OnScale>(moveable, e, {\n            scale,\n            direction,\n            dist: nowDist,\n            delta,\n            transform: `${transform} scale(${scaleX}, ${scaleY})`,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(moveable.state, inverseDelta, inputEvent, isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManager<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillParams<OnScaleEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const direction = params.direction;\n        const startPos = getAbsoluteFixedPosition(moveable, direction);\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            datas,\n            (child, childDatas) => {\n                const pos = getAbsoluteFixedPosition(child, direction);\n                const [originalX, originalY] = caculate(\n                    createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                    [pos[0] - startPos[0], pos[1] - startPos[1], 1],\n                    3,\n                );\n                childDatas.originalX = originalX;\n                childDatas.originalY = originalY;\n\n                return e;\n            },\n        );\n\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n        const keepRatio = moveable.props.keepRatio;\n        const { scale } = params;\n        const startPos = getAbsoluteFixedPosition(moveable, datas.direction);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            datas,\n            (_, childDatas) => {\n                const [clientX, clientY] = caculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        childDatas.originalX * scale[0],\n                        childDatas.originalY * scale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...e,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(startPos, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", datas, e);\n\n        const nextParams = fillParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to scale\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n","import { prefix, getLineStyle, getDirection, getAbsolutePosesByState, triggerEvent, fillParams } from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    convertMatrixtoCSS, caculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    multiplyCSS,\n    minus,\n    createWarpMatrix,\n    getRad,\n    plus,\n} from \"@moveable/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport { setDragStart, getDragDist, getPosIndexesByDirection } from \"../DraggerUtils\";\nimport MoveableManager from \"../MoveableManager\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd,\n} from \"../types\";\nimport { hasClass, dot } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirection\";\nimport { hasGuidelines, checkSnapBounds } from \"./Snappable\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    },\n    render(moveable: MoveableManager<ResizableProps & ScalableProps & WarpableProps>, React: Renderer) {\n        const { resizable, scalable, warpable } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return;\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")} key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManager<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n\n        setDragStart(moveable, { datas });\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map((p, i) => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => caculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startMatrix = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n        state.snapRenderInfo = {\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startMatrix = matrix;\n            },\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManager<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startMatrix,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkSnapBounds(\n                moveable,\n                selectedPoses.map(pos => [pos[0] + distX, pos[1] + distY]),\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[1],\n            poses[2],\n            poses[3],\n            nextPoses[0],\n            nextPoses[1],\n            nextPoses[2],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n\n        const matrix = convertMatrixtoCSS(multiply(targetInverseMatrix, h, 4));\n        const transform = `${datas.targetTransform} matrix3d(${matrix.join(\",\")})`;\n\n        const delta = multiplyCSS(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: multiplyCSS(startMatrix, matrix, 4),\n            multiply: multiplyCSS,\n            dist: matrix,\n            transform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManager<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillParams<OnWarpEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n};\n","import { prefix } from \"./utils\";\n\nexport const AREA = prefix(\"area\");\nexport const AREA_PIECES = prefix(\"area-pieces\");\nexport const AREA_PIECE = prefix(\"area-piece\");\nexport const AVOID = prefix(\"avoid\");\n","import MoveableManager from \"../MoveableManager\";\nimport {\n    createWarpMatrix, convertMatrixtoCSS,\n    caculate, convertPositionMatrix, invert, minus, plus,\n} from \"@moveable/matrix\";\nimport { ref } from \"framework-utils\";\nimport { triggerEvent, fillParams, getRect, caculatePoses } from \"../utils\";\nimport { Renderer, GroupableProps, DragAreaProps, OnClick } from \"../types\";\nimport { AREA_PIECE, AREA, AVOID, AREA_PIECES } from \"../classNames\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { addClass, findIndex, removeClass } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManager) {\n    const el = moveable.areaElement;\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n    },\n    render(moveable: MoveableManager<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable } = moveable.props;\n        const { width, height, pos1, pos2, pos3, pos4 } = moveable.state;\n\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={AREA}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        );\n        const transform = h.length ? `matrix3d(${convertMatrixtoCSS(h).join(\",\")})` : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={AREA} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManager, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        datas.inputTarget = inputEvent.target;\n        const areaElement = moveable.areaElement;\n        const {\n            targetClientRect,\n            pos1, pos2, pos3, pos4,\n            width, height,\n            rootMatrix,\n            is3d,\n        } = moveable.state;\n        const { left, top } = targetClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n        } = getRect([pos1, pos2, pos3, pos4]);\n        const n = is3d ? 4 : 3;\n        const poses = caculatePoses(rootMatrix, width, height, n);\n        const {\n            left: rootLeft,\n            top: rootTop,\n        } = getRect(poses);\n\n        const rootRelativePos = minus(\n            [clientX, clientY],\n            plus([left - rootLeft, top - rootTop], poses[0]),\n        );\n\n        const [posX, posY] = caculate(\n            invert(rootMatrix, n),\n            convertPositionMatrix(rootRelativePos, n),\n            n,\n        );\n\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n    },\n    drag(moveable: MoveableManager, { datas, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManager<DragAreaProps>, e: any) {\n        if (!e.inputEvent) {\n            return false;\n        }\n        const { inputEvent, isDragArea, datas } = e;\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n\n        const target = moveable.state.target!;\n        const inputTarget = inputEvent.target;\n\n        if (isDragArea || moveable.isMoveableElement(inputTarget)) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroup, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroup, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroup,\n        e: any,\n    ) {\n        const { inputEvent, isDragArea, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!isDragArea) {\n            restoreStyle(moveable);\n        }\n        const prevInputTarget = datas.inputTarget;\n        const inputTarget = inputEvent.target;\n\n        if (isDragArea || moveable.isMoveableElement(inputTarget) || prevInputTarget === inputTarget) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams(moveable, e, {\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n};\n","import MoveableManager from \"../MoveableManager\";\nimport { prefix, getControlTransform } from \"../utils\";\nimport { Renderer } from \"../types\";\n\nexport default {\n    name: \"origin\",\n    props: {\n        origin: Boolean,\n    },\n    render(moveable: MoveableManager, React: Renderer): any {\n        if (!moveable.props.origin) {\n            return null;\n        }\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n};\n","import MoveableManager from \"../MoveableManager\";\nimport { ScrollableProps, OnScroll } from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n    },\n    dragStart(moveable: MoveableManager<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer(),\n        } = props;\n\n        const dragScroll = new DragScroll();\n\n        e.datas.dragScroll = dragScroll;\n\n        const draggerName = e.isControl ? \"controlDragger\" : \"targetDragger\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[draggerName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainer as HTMLElement,\n        });\n    },\n    checkScroll(moveable: MoveableManager<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManager<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroup, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroup, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroup, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroup, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroup, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        container: Object,\n        dragArea: Boolean,\n        origin: Boolean,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n    },\n};\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\n\nexport const MOVEABLE_ABLES = [\n    Default, Snappable, Pinchable, Draggable, Rotatable, Resizable, Scalable, Warpable, Scrollable, DragArea, Origin,\n] as const;\n","import { refs } from \"framework-utils\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        groupable: Boolean,\n    },\n    render(moveable: MoveableGroup, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, MoveableManagerProps } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleDragger, getAreaAbleDragger } from \"./getAbleDragger\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, throttle, getAbsolutePosesByState, equals } from \"./utils\";\nimport { plus, rotate } from \"@moveable/matrix\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = rotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1s = [MIN_NUM, MAX_NUM];\n        const b2s = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // ㅠ = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1s[0] = Math.max(b1s[0], b1);\n                b1s[1] = Math.min(b1s[1], b1);\n                b2s[0] = Math.max(b2s[0], b2);\n                b2s[1] = Math.min(b2s[1], b2);\n            });\n        });\n\n        b1s.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2s.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n\nclass MoveableGroup extends MoveableManager<GroupableProps, any> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public rotation: number = 0;\n\n    public updateEvent(prevProps: MoveableManagerProps<GroupableProps>) {\n        const state = this.state;\n        const props = this.props;\n\n        if (!state.target) {\n            state.target = this.areaElement;\n\n            this.controlBox.getElement().style.display = \"block\";\n            this.targetDragger = getAreaAbleDragger(this, \"targetAbles\", \"Group\");\n            this.controlDragger = getAbleDragger(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n        }\n        const isContainerChanged = !equals(prevProps.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n        }\n        const rotation = this.rotation;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        target.style.cssText += `left:0px;top:0px;width:${width}px; height:${height}px;transform:rotate(${rotation}deg)`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            state,\n        );\n        const pos = [info.left!, info.top!];\n        [\n            info.pos1,\n            info.pos2,\n            info.pos3,\n            info.pos4,\n        ] = getAbsolutePosesByState(info as Required<typeof info>);\n        info.origin = plus(pos, info.origin!);\n        info.beforeOrigin = plus(pos, info.beforeOrigin!);\n\n        const clientRect = info.targetClientRect!;\n\n        clientRect.top += (top - info.top!) - state.top;\n        clientRect.left += (left - info.left!) - state.left;\n\n        this.updateState(\n            {\n                ...info,\n                left: left - info.left!,\n                top: top - info.top!,\n            },\n            isSetState,\n        );\n    }\n    public triggerEvent(name: string, e: any): any {\n        if (name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n}\n\nexport default MoveableGroup;\n","import * as React from \"react\";\nimport { MoveableProps, Able, MoveableInterface, RectInfo, AbleRequestParam, Requester } from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref } from \"framework-utils\";\nimport { isArray } from \"@daybrush/utils\";\nimport Groupable from \"./ables/Groupable\";\n\nexport default class Moveable<T = {}> extends React.PureComponent<MoveableProps & T> implements MoveableInterface {\n    public moveable!: MoveableManager<MoveableProps> | MoveableGroup;\n    public render() {\n        const props = this.props;\n        const ables: Able[] = props.ables as Able[] || [];\n        const target = this.props.target || this.props.targets;\n        const isArr = isArray(target);\n        const isGroup = isArr && (target as any[]).length > 1;\n\n        if (isGroup) {\n            const nextProps = {\n                ...this.props,\n                target: null,\n                targets: target as any[],\n                ables: [...MOVEABLE_ABLES, Groupable, ...ables],\n            };\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps} />;\n        } else {\n            const moveableTarget = isArr ? (target as any[])[0] : target;\n\n            return <MoveableManager<MoveableProps> key=\"single\" ref={ref(this, \"moveable\")}\n                {...{ ...this.props, target: moveableTarget, ables: [...MOVEABLE_ABLES, ...ables] }} />;\n        }\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: HTMLElement | SVGElement): boolean {\n        return this.moveable.isMoveableElement(target);\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent): void {\n        this.moveable.dragStart(e);\n    }\n\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number): boolean {\n        return this.moveable.isInside(clientX, clientY);\n    }\n\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(): void {\n        this.moveable.updateRect();\n    }\n\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(): void {\n        this.moveable.updateTarget();\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging(): boolean {\n        return this.moveable.isDragging();\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        return this.moveable.getRect();\n    }\n\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @param - ableName\n     * @param - request to be able params. If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10, isInstant: true });\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, params?: AbleRequestParam): Requester {\n        return this.moveable.request(ableName, params);\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.moveable.componentWillUnmount();\n    }\n}\n"],"names":["getSVGCursor","scale","degree","getCursorCSS","x1","x2","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","os","name","indexOf","browser","PREFIX","MOVEABLE_CSS","prefixCSS","map","join","NEARBY_POS","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","multiply2","pos1","pos2","prefix","_i","classNames","prefixNames","createIdentityMatrix3","createIdentityMatrix","getTransformMatrix","transform","isObject","value","splitBracket","split","v","parseFloat","getAbsoluteMatrix","matrix","origin","multiplies","createOriginMatrix","a","measureSVGSize","el","unit","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","i","_a","style","transformOrigin","getOffsetInfo","lastParent","isParent","body","document","target","parentElement","isEnd","position","isStatic","offsetParent","getOffsetPosInfo","container","isFixed","tagName","toLowerCase","offsetLeft","offsetTop","containerClientRect","documentElement","getBoundingClientRect","left","top","isSVG","isUndefined","hasOffset","pos","offset","getMatrixStackInfo","prevMatrix","matrixes","is3d","targetMatrix","offsetContainer","length","styleTransform","convertCSStoMatrix","matrixesLength","convertDimension","offsetPos","push","getSVGMatrix","_b","isOffsetEnd","parentClientLeft","parentClientTop","clientLeft","clientTop","scrollLeft","scrollTop","caculateMatrixStack","rootContainer","prevRootMatrix","prevN","prevTargetMatrix","rootMatrixes","isRoot3d","isSVGGraphicElement","originalContainer","allMatrix","rootMatrix","beforeMatrix","offsetMatrix","endContainer","reverse","forEach","multiply","slice","isMatrix3d","convertMatrixtoCSS","ignoreDimension","clientWidth","clientHeight","baseVal","x","y","width","height","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","scaleMatrix","createScaleMatrix","getSVGGraphicsOffset","getBBox","bbox","caculatePosition","caculate","convertPositionMatrix","caculatePoses","pos3","pos4","getRect","poses","posesX","posesY","right","bottom","rectWidth","rectHeight","caculateRect","getSVGOffset","absoluteMatrix","rect","rectLeft","rectTop","mat","_c","prevLeft","prevTop","prevWidth","prevHeight","posOrigin","prevOrigin","minus","rectOrigin","count","inverseBeforeMatrix","invert","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","caculateMoveablePosition","y1","y2","x3","y3","_e","x4","y4","_f","originX","originY","center","pos1Rad","getRad","pos2Rad","direction","PI","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","rad","getControlTransform","rotation","reduce","prev","getCSSSize","window","getSize","isOffset","isBoxSizing","boxSizing","offsetWidth","offsetHeight","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getRotationRad","getTargetInfo","parentContainer","state","beforeDirection","targetTransform","beforeOrigin","targetClientRect","resetClientRect","undefined","beforePos","getClientRect","scrollWidth","scrollHeight","isExtends","getDirection","direciton","getAttribute","dir","getAbsolutePoses","dist","plus","getAbsolutePosesByState","roundSign","num","throttle","throttleArray","nums","_","unset","self","getOrientationDirection","isInside","k1","k2","k3","k4","k5","k6","signs1","signs2","every","sign","fillParams","moveable","params","datas","tslib_1","clientX","clientY","inputEvent","currentTarget","triggerEvent","isManager","MoveableManager","prototype","call","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","filter","able","some","method","ableGroup","getKeepRatioHeight","isWidth","ratio","getKeepRatioWidth","equals","a1","a2","selectValue","values","groupBy","arr","func","groups","groupKeys","index","groupKey","keyIndex","group","groupByMap","flat","cur","concat","maxOffset","args","sort","b","minOffset","convertDragDist","triggerRenderStart","isGroup","isPinch","eventAffix","targets","props","triggerRender","triggerRenderEnd","sPinch","isDrag","triggerAble","ableType","eventOperation","eventType","isReqeust","isStart","isRequest","areaElement","eventName","conditionName","isAfter","updateRect","events","renderDatas","render","renderEvent","originalDatas","results","condition","ableName","nextDatas","isUpdate","dragger","moveables","childeMoveable","isUnmounted","forceUpdate","getAreaAbleDragger","controlBox","getElement","getAbleDragger","dragstart","eventTarget","className","pinchstart","conditionFunctions","options","pinchThreshold","Dragger","ControlBoxElement","styled","renderLine","React","key","_this","edge","parentPosition","propsTarget","zoom","checkUpdate","parentLeft","parentTop","stateTarget","groupTargets","isDisplay","ref","renderAbles","parentMoveable","updateEvent","prevProps","getContainer","targetDragger","onDragStart","type","isTarget","isSetState","updateState","controlBoxElement","hasTargetAble","targetAbles","hasControlAble","controlAbles","prevTarget","dragArea","prevDragArea","isTargetChanged","isUnset","controlDragger","unsetAbles","isFlag","statePos","param","isInstant","groupable","requsetAble","isDragging","request","requestEnd","ableRequester","isControl","requester","ableParam","requestStart","stateContainer","updateAbles","isChanged","callback","dragStart","pinchStart","dragControlStart","nextState","setState","Renderer","createElement","getRotatiion","touches","pinchable","Boolean","Number","controlEventName","pinchAbles","canPinch","result","parentRotate","ableEvent","snapRenderInfo","pinch","pinchScale","distance","parentDistance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","setCustomDrag","delta","isConvert","move","draggableDatas","draggable","parentEvent","client","prevX","prevY","startX","startY","distX","distY","deltaX","deltaY","parentDragger","triggerChildDragger","match","childs","child","childEvent","CustomDragger","childDraggers","parentFlag","triggerChildAble","eachEvent","ableDatas","childDatas","isFunction","setDragStart","inverseMatrix","absoluteOrigin","startDragBeforeDist","startDragDist","getDragDist","isBefore","getInverseDragDist","caculateTransformOrigin","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","getPosesByDirection","getPosByDirection","nextPoses","average","getPosByReverseDirection","getStartPos","startPos1","startPos2","startPos3","startPos4","getDist","startPos","getNextMatrix","getScaleDist","fixedPosition","nextMatrix","groupLeft","groupTop","getResizeDist","nextOrigin","getStartDirection","baseDirection","getAbsoluteFixedPosition","directionCondition","parentDirection","hasClass","getGapGuidelines","guidelines","snapThreshold","start","end","otherStart","otherEnd","totalGuidelines","otherIndex","otherType","elementGuidelines","guidelineType","element","sizes","guideline1","elementStart","elementEnd","guideline2Pos","guideline2Sizes","guideline2Element","targetStart","targetEnd","gap","canSnap","gapGuidelines","centerPos","getTotalGuidelines","containerHeight","containerWidth","snapHorizontal","snapVertical","snapGap","verticalGuidelines","horizontalGuidelines","_g","checkSnapPoses","snapCenter","customSnapThreshold","snapElement","vertical","checkSnap","horizontal","checkSnapKeepRatio","endPos","endX","endY","dx","dy","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","isCenter","isSnapCenter","verticalNames","horizontalNames","getNearestSnapGuidelineInfo","snapInfo","guideline","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","keepRatio","getNearOffsetInfo","offsets","aSign","bSign","aOffset","bOffset","aDist","bDist","isBound","isStartLine","dot","line","cx","cy","hitTestLine","test1","test2","isSameStartLine","dots","error","centerSign","checkInnerBoundDot","threshold","checkInnerBound","bounds","innerBounds","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","isHorizontalStart","isVerticalStart","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","horizontalOffset","boundLine","dot1","dot2","boundDot1","boundDot2","dy1","dx1","dy2","dx2","getInnerBoundInfo","lines","multiple","sizeOffset","getInnerBoundDragInfo","getCheckSnapLines","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","dir1","dir2","isBoundRotate","relativePoses","boundDots","rotate","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","checkBoundPoses","checkBound","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","snapStart","containerLeft","containerTop","targetLeft","targetTop","elementTop","elementBottom","elementLeft","elementRight","enableSnap","hasGuidelines","snappable","solveNextOffset","solveEquation","widthOffset","heightOffset","getNextFixedPoses","fixedPos","getSnapBoundOffset","boundInfo","getSnapBound","checkSnapBoundsKeepRatio","horizontalBoundInfo","verticalBoundInfo","horizontalDist","verticalDist","checkSnapBounds","boundPoses","checkMaxBounds","fixedDirection","maxWidth","Infinity","maxHeight","directions","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","snapBoundInfo","otherHorizontalDist","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalDist","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","getCheckSnapDirections","getSizeOffsetInfo","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","checkSnapSize","checkSnapScale","sizeDist","snapOffset","startCheckSnapDrag","absolutePoses","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapDrag","snapPoses","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","getSnapGuidelines","getElementGuidelineDist","elementPos","elementSize","targetSize","relativePos","groupByElementGuidelines","clientPos","groupInfos","groupInfo","find","groupElement","groupPos","renderElementGroup","clientSize","isDisplaySnapDigit","snapDigit","directionName","posName1","posName2","sizeName","isFirstRenderSize","j","linePos","lineSize","isRenderSize","snapSize","toFixed","renderSnapPoses","renderGuidelines","targetPos1","targetPos2","getGapGuidelinesToStart","targetSizes","guidelinePos","absGap","gapPos","aPos","bPos","gapSizes","gapGuideline","renderPos","getGapGuidelinesToEnd","minSize","renderGapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalBoundPos","horizontalBoundPos","verticalInnerBoundPoses","horizontalInnerBoundPoses","Array","Object","minLeft","minTop","snapInfos","snap","middle","verticalPosInfos","horizontalPosInfos","elementHorizontalGroup","elementVerticalGroup","gapVerticalGuidelines","gapHorizontalGuidelines","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlEnd","dragGroupStart","dragGroupEnd","dragGroupControlStart","dragGroupControlEnd","throttleDrag","dragInfo","startTranslate","prevDist","prevBeforeDist","set","startRect","drag","dragRotateRad","deg","cos","sin","passDeltaX","passDistX","passDeltaY","passDistY","beforeTranslate","beforeDist","beforeDelta","nextTransform","nextParams","dragGroup","setRotateStartInfo","startAbsoluteOrigin","prevDeg","prevSnapDeg","startDeg","loop","getParentDeg","moveableRect","parentDist","startRotate","absoluteDeg","getDeg","throttleRotate","prevLoop","absolutePrevSnapDeg","getRotateInfo","getPositions","rotationPosition","rotatable","String","rotationRad","externalRotate","beforeInfo","afterInfo","controlRect","rotatation","isRotate","dragControl","_h","beforeRotate","dragGroupControlCondition","parentBeforeOrigin","eventParams","childClient","prevClient","Draggable","dragGroupControl","dragResult","distRotate","deltaRotate","renderControls","defaultDirections","directionMap","directionRotation","renderAllDirections","renderDiagonalDirections","resizable","throttleResize","renderDirections","startOffsetWidth","startOffsetHeight","fixedOriginalPosition","startWidth","startHeight","setOrigin","isResize","parentScale","parentKeepRatio","dragClient","sizeDirection","distWidth","distHeight","standardRad","ratioRad","signSize","snapDist","isNoSnap","inverseDelta","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","startScale","isScale","nowDist","stateDirection","isArray","snapHeight","snapWidth","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","startMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","multiplyCSS","AREA","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","removeClass","cssText","renderPieces","isDragArea","rootLeft","rootTop","rootRelativePos","posX","posY","rects","children","nextElementSibling","addClass","isMoveableElement","containsTarget","contains","prevInputTarget","targetIndex","findIndex","parentTarget","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","dragScroll","DragScroll","draggerName","on","scrollBy","checkScroll","getScrollPosition","ev","dragGroupContro","dragGroupControEnd","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","DragArea","Origin","defaultGroupRotate","refs","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1s_1","b2s_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","display","isContainerChanged","added","changed","removed","updateGroup","info","clientRect","_super","Groupable","MoveableGroup","defaultProps","isArr","nextProps","moveableTarget","updateTarget","componentWillUnmount"],"mappings":"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"}